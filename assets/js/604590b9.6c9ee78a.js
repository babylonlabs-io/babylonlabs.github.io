"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[7256],{7576:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=t(4848),s=t(8453);const o={id:"deployment-overview",sidebar_label:"Deployment Overview",hide_table_of_contents:!0},a="Overview of Bitcoin Staking backend deployment",r={id:"user-guides/bitcoin-staking-phase1/backend-deployment/deployment-overview",title:"Overview of Bitcoin Staking backend deployment",description:"Overview of Bitcoin Staking backend deployment",source:"@site/docs/user-guides/bitcoin-staking-phase1/backend-deployment/deployment-overview.md",sourceDirName:"user-guides/bitcoin-staking-phase1/backend-deployment",slug:"/user-guides/bitcoin-staking-phase1/backend-deployment/deployment-overview",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/deployment-overview",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/bitcoin-staking-phase1/backend-deployment/deployment-overview.md",tags:[],version:"current",frontMatter:{id:"deployment-overview",sidebar_label:"Deployment Overview",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"Backend Deployment",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/overview"},next:{title:"Required Infrastructure Setup",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/overview"}},d={},c=[];function l(e){const n={a:"a",h1:"h1",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"overview-of-bitcoin-staking-backend-deployment",children:"Overview of Bitcoin Staking backend deployment"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Overview of Bitcoin Staking backend deployment",src:t(2046).A+"",width:"1359",height:"937"})}),"\n",(0,i.jsx)(n.p,{children:"The Babylon Bitcoin Staking system comprises of the following components:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-indexer",children:(0,i.jsx)(n.strong,{children:"BTC Staking Indexer"})}),":\nParses BTC blocks for valid staking, unbonding,\nand withdrawal transactions, and forwards relevant events to a queueing system,\nwhile also persisting them to an on-disk key-value storage."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/rabbitmq",children:(0,i.jsx)(n.strong,{children:"RabbitMQ"})}),":\nHouses a set of queues containing BTC Staking transactions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-api",children:(0,i.jsx)(n.strong,{children:"Staking API Service"})}),":\nConsumes BTC Staking transactions from the RabbitMQ queues\nand stores them in a central data store,\nadditionally accepting unbonding requests."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/mongodb",children:(0,i.jsx)(n.strong,{children:"MongoDB"})}),": Stores BTC Staking transaction data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-expiry-checker",children:(0,i.jsx)(n.strong,{children:"Staking Expiry Checker"})}),":\nPeriodically checks MongoDB for expired BTC Stake Delegations and Unbondings."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-expiry-checker",children:(0,i.jsx)(n.strong,{children:"Unbonding Pipeline"})}),":\nForwards unbonding requests for signing to a Covenant Emulator committee\nand submits them to the BTC network"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/babylonlabs-io/simple-staking",children:(0,i.jsx)(n.strong,{children:"Staking Dashboard"})}),":\nUI that allows for creating BTC Staking transactions.\nConnects to the API to retrieve information about the system and historical delegations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/babylonlabs-io/covenant-signer/blob/dev/docs/deployment.md#covenant-signer-setup-deployment",children:(0,i.jsx)(n.strong,{children:"Covenant Signer"})}),":\nOperated by members of the covenant committee.\nReceives unbonding transactions and returns the same\ntransactions signed by the covenant emulator's key."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/bitcoind",children:(0,i.jsx)(n.strong,{children:"Bitcoin Full Node"})}),":\nVerify whether the staking transaction has already been\nsubmitted to Bitcoin network\nand has the required amount of BTC confirmations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/babylonlabs-io/covenant-signer/blob/dev/docs/deployment.md#3-bitcoind-offline-wallet-operations",children:(0,i.jsx)(n.strong,{children:"Bitcoin Offline Wallet"})}),":\nStores the Covenant Signer member keys\nand signs unbonding transactions forwarded by the Covenant Signer.\nCovenant signer needs to operate a Bitcoin wallet,\nand connect to a Bitcoin node.\nFor a detailed setup guide, visit ",(0,i.jsx)(n.a,{href:"https://github.com/babylonlabs-io/covenant-signer/blob/dev/docs/deployment.md",children:"Covenant Signer Setup Deployment"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/global-params",children:(0,i.jsx)(n.strong,{children:"A Global Configuration file"})}),"\nthat contains system-wide parameters pertinent\nto the processed Staking transactions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/global-params",children:(0,i.jsx)(n.strong,{children:"A Finality Provider config file"})}),"\nthat associates finality provider\nBTC public keys with additional information about them such\nas their moniker, commission etc."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},2046:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/phase-1-overview-57e366070fed831f185af46a78bfa611.png"},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);