"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[2822],{8493:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>s,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=n(4848),l=n(8453);const o={id:"babylond_query_btclightclient_tip",sidebar_label:"babylond query btclightclient tip",hide_table_of_contents:!0},c="babylond query btclightclient tip",r={id:"cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip",title:"babylond query btclightclient tip",description:"Retrieve the tip of the bitcoin of the blockchain.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_btclightclient",slug:"/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip.md",tags:[],version:"current",frontMatter:{id:"babylond_query_btclightclient_tip",sidebar_label:"babylond query btclightclient tip",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query btclightclient params",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params"},next:{title:"babylond query checkpointing",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_checkpointing"}},a={},d=[{value:"query btclightclient tip command",id:"query-btclightclient-tip-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function b(t){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"babylond-query-btclightclient-tip",children:"babylond query btclightclient tip"}),"\n",(0,i.jsx)(e.p,{children:"Retrieve the tip of the bitcoin of the blockchain."}),"\n",(0,i.jsx)(e.h2,{id:"query-btclightclient-tip-command",children:"query btclightclient tip command"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"babylond query btclightclient tip [flags]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for tip\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n'})}),"\n",(0,i.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function s(t={}){const{wrapper:e}={...(0,l.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(b,{...t})}):b(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>r});var i=n(6540);const l={},o=i.createContext(l);function c(t){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(l):t.components||l:c(t.components),i.createElement(o.Provider,{value:e},t.children)}}}]);