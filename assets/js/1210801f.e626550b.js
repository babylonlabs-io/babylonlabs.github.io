"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[8304],{9658:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var t=o(4848),a=o(8453);const r={id:"babylondkeysrename",sidebar_label:"babylond keys rename",hide_table_of_contents:!0},s="babylond keys rename",l={id:"cli/babylond/keys/babylondkeysrename",title:"babylond keys rename",description:"Rename an existing key name that is stored on the local keybase.",source:"@site/docs/cli/babylond/keys/babylondkeysrename.md",sourceDirName:"cli/babylond/keys",slug:"/cli/babylond/keys/babylondkeysrename",permalink:"/docs/cli/babylond/keys/babylondkeysrename",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/keys/babylondkeysrename.md",tags:[],version:"current",frontMatter:{id:"babylondkeysrename",sidebar_label:"babylond keys rename",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond keys parse",permalink:"/docs/cli/babylond/keys/babylondkeysparse"},next:{title:"babylond keys show",permalink:"/docs/cli/babylond/keys/babylondkeysshow"}},i={},d=[{value:"keys rename command",id:"keys-rename-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"babylond-keys-rename",children:"babylond keys rename"}),"\n",(0,t.jsx)(n.p,{children:"Rename an existing key name that is stored on the local keybase."}),"\n",(0,t.jsx)(n.h2,{id:"keys-rename-command",children:"keys rename command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"babylond keys rename <old_name> <new_name> [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -h, --help   help for rename\n  -y, --yes    Skip confirmation prompt when renaming offline or ledger key references\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --home string              The application home directory (default "/home/<yourSystemUsername>/.babylond")\n      --keyring-backend string   Select keyring\'s backend (os|file|test) (default "os")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --log_format string        The logging format (json|plain) (default "plain")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --output string            Output format (text|json) (default "text")\n      --trace                    print out full stack trace on errors\n'})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var t=o(6540);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);