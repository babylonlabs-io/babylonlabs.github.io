"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[8071],{4718:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>b,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=t(4848),c=t(8453);const a={id:"babylond_query_btccheckpoint_params",sidebar_label:"babylond query btccheckpoint params",hide_table_of_contents:!0},r="babylond query btccheckpoint params",i={id:"cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params",title:"babylond query btccheckpoint params",description:"Show the parameters of the module.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/Babylond_query_btccheckpoint_params.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_btccheckpoint",slug:"/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/Babylond_query_btccheckpoint_params.md",tags:[],version:"current",frontMatter:{id:"babylond_query_btccheckpoint_params",sidebar_label:"babylond query btccheckpoint params",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query btccheckpoint epoch-submissions",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_epoch_submissions"},next:{title:"babylond query btclightclient",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_btclightclient"}},s={},l=[{value:"query btccheckpoint params command",id:"query-btccheckpoint-params-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"babylond-query-btccheckpoint-params",children:"babylond query btccheckpoint params"}),"\n",(0,o.jsx)(n.p,{children:"Show the parameters of the module."}),"\n",(0,o.jsx)(n.h2,{id:"query-btccheckpoint-params-command",children:"query btccheckpoint params command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"babylond query btccheckpoint params [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for params\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function b(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(6540);const c={},a=o.createContext(c);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);