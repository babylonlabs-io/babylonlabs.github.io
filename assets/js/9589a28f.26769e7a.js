"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[5847],{8668:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>r});var s=t(4848),i=t(8453);const o={id:"Babylond_query_ibc_client_consensus-state-heights",sidebar_label:"babylond query ibc client consensus-state-heights",hide_table_of_contents:!0},c="babylond query ibc client consensus-state-heights",a={id:"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights",title:"babylond query ibc client consensus-state-heights",description:"Querying all the consensus state of a client by the specified height.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client",slug:"/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights.md",tags:[],version:"current",frontMatter:{id:"Babylond_query_ibc_client_consensus-state-heights",sidebar_label:"babylond query ibc client consensus-state-heights",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query ibc client consensus-state",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state"},next:{title:"babylond query ibc client consensus-states",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states"}},l={},r=[{value:"query ibc client consensus-state-heights command",id:"query-ibc-client-consensus-state-heights-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"babylond-query-ibc-client-consensus-state-heights",children:"babylond query ibc client consensus-state-heights"}),"\n",(0,s.jsx)(n.p,{children:"Querying all the consensus state of a client by the specified height."}),"\n",(0,s.jsx)(n.h2,{id:"query-ibc-client-consensus-state-heights-command",children:"query ibc client consensus-state-heights command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"babylond query ibc client consensus-state-heights [client-id] [flags]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-command",children:"Example Command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"$ babylond query ibc client consensus-state-heights [client-id]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      --count-total       count total number of records in consensus state heights to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for consensus-state-heights\n      --limit uint        pagination limit of consensus state heights to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of consensus state heights to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of consensus state heights to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of consensus state heights to query for\n      --reverse           results are sorted in descending order\n'})}),"\n",(0,s.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);