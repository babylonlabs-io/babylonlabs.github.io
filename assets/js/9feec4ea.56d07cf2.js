"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[8571],{8901:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var t=i(4848),o=i(8453);const s={id:"bitcoind",sidebar_label:"Bitcoind",hide_table_of_contents:!1},r="Bitcoin Node Setup",c={id:"user-guides/bitcoin-staking-phase1/backend-deployment/infra/bitcoind",title:"Bitcoin Node Setup",description:"1. Hardware Requirements",source:"@site/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/bitcoind.md",sourceDirName:"user-guides/bitcoin-staking-phase1/backend-deployment/infra",slug:"/user-guides/bitcoin-staking-phase1/backend-deployment/infra/bitcoind",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/bitcoind",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/bitcoind.md",tags:[],version:"current",frontMatter:{id:"bitcoind",sidebar_label:"Bitcoind",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"RabbitMQ",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/rabbitmq"},next:{title:"Bitcoin Staking Backend Services Setup",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/overview"}},a={},d=[{value:"1. Hardware Requirements",id:"1-hardware-requirements",level:2},{value:"2. Bitcoin Core Setup",id:"2-bitcoin-core-setup",level:2},{value:"3. Configuration",id:"3-configuration",level:2},{value:"4. Start bitcoind",id:"4-start-bitcoind",level:2},{value:"4.1 Start the Bitcoin daemon",id:"41-start-the-bitcoin-daemon",level:3},{value:"4.2 Verify bitcoind is Running",id:"42-verify-bitcoind-is-running",level:3},{value:"5. Create a systemd Service for bitcoind (Optional)",id:"5-create-a-systemd-service-for-bitcoind-optional",level:2},{value:"5.1 Create systemd service definition",id:"51-create-systemd-service-definition",level:3},{value:"5.2 Reload systemd manager configuration",id:"52-reload-systemd-manager-configuration",level:3},{value:"5.3 Enable the service to start on boot",id:"53-enable-the-service-to-start-on-boot",level:3},{value:"5.4 Start the service",id:"54-start-the-service",level:3},{value:"6. Monitoring",id:"6-monitoring",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"bitcoin-node-setup",children:"Bitcoin Node Setup"}),"\n",(0,t.jsx)(n.h2,{id:"1-hardware-requirements",children:"1. Hardware Requirements"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"CPU: Multi-core processor."}),"\n",(0,t.jsx)(n.li,{children:"Memory: Minimum 8GB RAM."}),"\n",(0,t.jsx)(n.li,{children:"Storage: SSDs with at least 800GB of space to accommodate the full Bitcoin blockchain."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"2-bitcoin-core-setup",children:"2. Bitcoin Core Setup"}),"\n",(0,t.jsxs)(n.p,{children:["Download and install the bitcoin binaries according to your operating system\nfrom the official\n",(0,t.jsx)(n.a,{href:"https://bitcoincore.org/bin/bitcoin-core-26.0/",children:"Bitcoind Core registry"}),".\nAll programs in this guide are compatible with version 26.0."]}),"\n",(0,t.jsx)(n.h2,{id:"3-configuration",children:"3. Configuration"}),"\n",(0,t.jsx)(n.p,{children:"bitcoind is configured through a main configuration file named bitcoin.conf."}),"\n",(0,t.jsx)(n.p,{children:"Depending on the operating system,\nthe configuration file should be placed under the corresponding path:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["MacOS: ",(0,t.jsx)(n.code,{children:"/Users/<username>/Library/Application Support/Bitcoin"})]}),"\n",(0,t.jsxs)(n.li,{children:["Linux: ",(0,t.jsx)(n.code,{children:"/home/<username>/.bitcoin"})]}),"\n",(0,t.jsxs)(n.li,{children:["Windows: ",(0,t.jsx)(n.code,{children:"C:\\Users\\<username>\\AppData\\Roaming\\Bitcoin"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Both servers can utilize the following base parameter skeleton\n(adapted for the BTC signet network):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"# Accept command line and JSON-RPC commands\nserver=1\n# Enable transaction indexing\ntxindex=1\n# RPC server settings\nrpcuser=<rpc-username>\nrpcpassword=<rpc-password>\n# Optional: In case of non-mainnet BTC node,\n# the following two lines specify the network that your\n# node will operate; for this example, utilizing signet\nsignet=1\n[signet]\n# Port your bitcoin node will listen for incoming requests;\n# below port is the canonical port for signet,\n# for mainnet, typically 8332 is used\nrpcport=38332\n# Address your bitcoin node will listen for incoming requests\nrpcbind=0.0.0.0\n# Optional: Needed for remote node connectivity\nrpcallowip=0.0.0.0/0\n"})}),"\n",(0,t.jsx)(n.p,{children:"Notes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Instead of hardcoding the RPC server password (",(0,t.jsx)(n.code,{children:"rpcpassword"}),") in the config,\nit is recommended to generate its salted hash and use the rpcauth field instead.\nTo generate the salted hash, you can use\nthis ",(0,t.jsx)(n.a,{href:"https://jlopp.github.io/bitcoin-core-rpc-auth-generator/",children:"platform"}),"\nas reference - however, the salting operation should be executed locally.\nThe resulting config value will look like this:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"rpcauth=<rpc-password-salted-hash>\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"In case you will be connecting to BTC Mainnet network,\nensure to remove the following config skeleton lines:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"signet=1\n[signet]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"4-start-bitcoind",children:"4. Start bitcoind"}),"\n",(0,t.jsx)(n.h3,{id:"41-start-the-bitcoin-daemon",children:"4.1 Start the Bitcoin daemon"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bitcoind\n"})}),"\n",(0,t.jsx)(n.h3,{id:"42-verify-bitcoind-is-running",children:"4.2 Verify bitcoind is Running"}),"\n",(0,t.jsx)(n.p,{children:"Check the status of bitcoind."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bitcoin-cli getblockchaininfo\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You should see information about the blockchain,\nindicating that ",(0,t.jsx)(n.code,{children:"bitcoind"})," is running correctly."]}),"\n",(0,t.jsx)(n.h2,{id:"5-create-a-systemd-service-for-bitcoind-optional",children:"5. Create a systemd Service for bitcoind (Optional)"}),"\n",(0,t.jsx)(n.h3,{id:"51-create-systemd-service-definition",children:"5.1 Create systemd service definition"}),"\n",(0,t.jsxs)(n.p,{children:["Run the following command, replacing ",(0,t.jsx)(n.code,{children:"your_username"})," with your actual username:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cat <<EOF | sudo tee /etc/systemd/system/bitcoind.service\n[Unit]\nDescription=Bitcoin daemon\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/bin/bitcoind -conf=/home/your_username/.bitcoin/bitcoin.conf\nExecStop=/usr/local/bin/bitcoin-cli stop\nUser=your_username\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\nEOF\n"})}),"\n",(0,t.jsx)(n.h3,{id:"52-reload-systemd-manager-configuration",children:"5.2 Reload systemd manager configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,t.jsx)(n.h3,{id:"53-enable-the-service-to-start-on-boot",children:"5.3 Enable the service to start on boot"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable bitcoind.service\n"})}),"\n",(0,t.jsx)(n.h3,{id:"54-start-the-service",children:"5.4 Start the service"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start bitcoind.service\n"})}),"\n",(0,t.jsx)(n.h2,{id:"6-monitoring",children:"6. Monitoring"}),"\n",(0,t.jsxs)(n.p,{children:["The bitcoind server availability can be polled through\n",(0,t.jsx)(n.a,{href:"https://github.com/prometheus/blackbox_exporter",children:"Prometheus Blackbox Exporter"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Bitcoin-specific Prometheus metrics can also be exposed\nby utilizing any open-source Prometheus bitcoind exporter\n(",(0,t.jsx)(n.a,{href:"https://github.com/jvstein/bitcoin-prometheus-exporter?tab=readme-ov-file",children:"example"}),")."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);