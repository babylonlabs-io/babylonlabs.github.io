"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[9082],{6075:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>i});var o=a(4848),t=a(8453);const r={id:"babylond_query_bank_balances",sidebar_label:"babylond query bank balances",hide_table_of_contents:!0},l="babylond query bank balances",s={id:"cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances",title:"babylond query bank balances",description:"Querying commands for the account balances by the specified address.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_balances.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_bank",slug:"/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_balances.md",tags:[],version:"current",frontMatter:{id:"babylond_query_bank_balances",sidebar_label:"babylond query bank balances",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query bank",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_bank"},next:{title:"babylond query bank denom-metadata",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata"}},d={},i=[{value:"query bank balances command",id:"query-bank-balances-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function b(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"babylond-query-bank-balances",children:"babylond query bank balances"}),"\n",(0,o.jsx)(n.p,{children:"Querying commands for the account balances by the specified address."}),"\n",(0,o.jsx)(n.h2,{id:"query-bank-balances-command",children:"query bank balances command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"babylond query bank balances [address] [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --count-total       count total number of records in all balances to query for\n      --denom string      The specific balance denomination to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for balances\n      --limit uint        pagination limit of all balances to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of all balances to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of all balances to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of all balances to query for\n      --reverse           results are sorted in descending order\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'--chain-id string     The network chain ID\n--home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n--log_format string   The logging format (json|plain) (default "plain")\n--log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n--trace               print out full stack trace on errors\n'})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(b,{...e})}):b(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>s});var o=a(6540);const t={},r=o.createContext(t);function l(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);