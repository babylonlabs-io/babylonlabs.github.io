"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[4051],{669:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>s,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var c=o(4848),i=o(8453);const l={id:"Babylond_query_ibc_client",sidebar_label:"babylond query ibc client",hide_table_of_contents:!0},t="babylond query ibc client",r={id:"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client",title:"babylond query ibc client",description:"Querying subcommands for the IBC client module.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_ibc",slug:"/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client.md",tags:[],version:"current",frontMatter:{id:"Babylond_query_ibc_client",sidebar_label:"babylond query ibc client",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query ibc channel unreceived-packets",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets"},next:{title:"babylond query ibc client consensus-state",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state"}},a={},d=[{value:"query ibc client commands",id:"query-ibc-client-commands",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function b(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"babylond-query-ibc-client",children:"babylond query ibc client"}),"\n",(0,c.jsx)(n.p,{children:"Querying subcommands for the IBC client module."}),"\n",(0,c.jsx)(n.h2,{id:"query-ibc-client-commands",children:"query ibc client commands"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"babylond query ibc client [flags]\nbabylond query ibc client [command]\n"})}),"\n",(0,c.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"-h, --help   help for client\n"})}),"\n",(0,c.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function s(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(b,{...e})}):b(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>r});var c=o(6540);const i={},l=c.createContext(i);function t(e){const n=c.useContext(l);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),c.createElement(l.Provider,{value:n},e.children)}}}]);