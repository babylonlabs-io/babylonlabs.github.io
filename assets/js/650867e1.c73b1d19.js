"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[6307],{8147:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>i,frontMatter:()=>r,metadata:()=>u,toc:()=>s});var t=a(4848),o=a(8453);const r={id:"babylond_query_auth_address_by_acc_num",sidebar_label:"babylond query auth address by-acc-num",hide_table_of_contents:!0},d="babylond query auth address by-acc-num",u={id:"cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num",title:"babylond query auth address by-acc-num",description:"Querying for an address by the specified account number.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_address_by_acc_num.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_auth",slug:"/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_address_by_acc_num.md",tags:[],version:"current",frontMatter:{id:"babylond_query_auth_address_by_acc_num",sidebar_label:"babylond query auth address by-acc-num",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query auth accounts",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts"},next:{title:"babylond query auth module-account",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_account"}},c={},s=[{value:"query auth accounts command",id:"query-auth-accounts-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"babylond-query-auth-address-by-acc-num",children:"babylond query auth address by-acc-num"}),"\n",(0,t.jsx)(n.p,{children:"Querying for an address by the specified account number."}),"\n",(0,t.jsx)(n.h2,{id:"query-auth-accounts-command",children:"query auth accounts command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:" babylond query auth address-by-acc-num [acc-num] [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for address-by-acc-num\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n'})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function i(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>d,x:()=>u});var t=a(6540);const o={},r=t.createContext(o);function d(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);