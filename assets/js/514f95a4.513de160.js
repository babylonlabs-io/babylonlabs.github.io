"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[526],{7868:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=o(4848),c=o(8453);const r={id:"babylond_query_btccheckpoint",sidebar_label:"babylond query btccheckpoint",hide_table_of_contents:!0},i="babylond query btccheckpoint",a={id:"cli/babylond/BabylondQuery/babylond_query_btccheckpoint",title:"babylond query btccheckpoint",description:"Querying commands for the btccheckpoint module.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint.md",sourceDirName:"cli/babylond/BabylondQuery",slug:"/cli/babylond/BabylondQuery/babylond_query_btccheckpoint",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_btccheckpoint",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint.md",tags:[],version:"current",frontMatter:{id:"babylond_query_btccheckpoint",sidebar_label:"babylond query btccheckpoint",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query block",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_block"},next:{title:"babylond query btccheckpoint btc-height",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height"}},d={},l=[{value:"query btccheckpoint commands",id:"query-btccheckpoint-commands",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function b(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"babylond-query-btccheckpoint",children:"babylond query btccheckpoint"}),"\n",(0,t.jsx)(n.p,{children:"Querying commands for the btccheckpoint module."}),"\n",(0,t.jsx)(n.h2,{id:"query-btccheckpoint-commands",children:"query btccheckpoint commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  babylond query btccheckpoint [flags]\n  babylond query btccheckpoint [command]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -h, --help   help for btccheckpoint\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourUsernameSystem>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function s(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(b,{...e})}):b(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(6540);const c={},r=t.createContext(c);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);