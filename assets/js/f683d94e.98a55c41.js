"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[6696],{9092:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var t=o(4848),s=o(8453);const i={id:"babylondkeysmnemonic",sidebar_label:"babylond keys mnemonic",hide_table_of_contents:!0},a="babylond keys mnemonic",r={id:"cli/babylond/keys/babylondkeysmnemonic",title:"babylond keys mnemonic",description:"The system entropy can create the bip39 mnemonic, also known as a seed phrase.",source:"@site/docs/cli/babylond/keys/babylondkeysmnemonic.md",sourceDirName:"cli/babylond/keys",slug:"/cli/babylond/keys/babylondkeysmnemonic",permalink:"/docs/cli/babylond/keys/babylondkeysmnemonic",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/keys/babylondkeysmnemonic.md",tags:[],version:"current",frontMatter:{id:"babylondkeysmnemonic",sidebar_label:"babylond keys mnemonic",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond keys migrate",permalink:"/docs/cli/babylond/keys/babylondkeysmigrate"},next:{title:"babylond keys parse",permalink:"/docs/cli/babylond/keys/babylondkeysparse"}},c={},l=[{value:"keys mnemonic command",id:"keys-mnemonic-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"babylond-keys-mnemonic",children:"babylond keys mnemonic"}),"\n",(0,t.jsx)(n.p,{children:"The system entropy can create the bip39 mnemonic, also known as a seed phrase."}),"\n",(0,t.jsx)(n.h2,{id:"keys-mnemonic-command",children:"keys mnemonic command"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"babylond keys mnemonic [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -h, --help             help for mnemonic\n      --unsafe-entropy   Prompt the user to supply their own entropy, instead of relying on the system\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --home string              The application home directory (default "/home/<yourSystemUsername>/.babylond")\n      --keyring-backend string   Select keyring\'s backend (os|file|test) (default "os")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --log_format string        The logging format (json|plain) (default "plain")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --output string            Output format (text|json) (default "text")\n      --trace                    print out full stack trace on e\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>r});var t=o(6540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);