"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[4468],{287:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var i=s(4848),a=s(8453);const t={id:"staking-api",sidebar_label:"Staking API"},r="Staking API",o={id:"user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-api",title:"Staking API",description:"The Staking API Service is a critical component of the Babylon Phase-1 system,",source:"@site/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-api.md",sourceDirName:"user-guides/bitcoin-staking-phase1/backend-deployment/services",slug:"/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-api",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-api",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-api.md",tags:[],version:"current",frontMatter:{id:"staking-api",sidebar_label:"Staking API"},sidebar:"docs",previous:{title:"Staking Indexer",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-indexer"},next:{title:"Staking Expiry Checker",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-expiry-checker"}},l={},c=[{value:"1. Hardware Requirements",id:"1-hardware-requirements",level:2},{value:"2. Install Staking API",id:"2-install-staking-api",level:2},{value:"2.1 Clone the repository to your local machine from Github",id:"21-clone-the-repository-to-your-local-machine-from-github",level:3},{value:"2.2 Check out the desired version",id:"22-check-out-the-desired-version",level:3},{value:"2.3 Install the binary by running",id:"23-install-the-binary-by-running",level:3},{value:"3. Configuration",id:"3-configuration",level:2},{value:"3.1 Create home directory",id:"31-create-home-directory",level:3},{value:"3.2 Copy the default configuration",id:"32-copy-the-default-configuration",level:3},{value:"3.3 Update default configurations",id:"33-update-default-configurations",level:3},{value:"4. Download global params",id:"4-download-global-params",level:2},{value:"5. Download finality providers",id:"5-download-finality-providers",level:2},{value:"6. Start Staking API",id:"6-start-staking-api",level:2},{value:"7. Create systemd service (Optional - Linux Only)",id:"7-create-systemd-service-optional---linux-only",level:2},{value:"7.1 Create systemd service definition",id:"71-create-systemd-service-definition",level:3},{value:"7.2 Reload systemd manager configuration",id:"72-reload-systemd-manager-configuration",level:3},{value:"7.3 Enable the service to start on boot",id:"73-enable-the-service-to-start-on-boot",level:3},{value:"7.4 Start the service",id:"74-start-the-service",level:3},{value:"7.5. Verify Staking API is running",id:"75-verify-staking-api-is-running",level:3},{value:"8. Monitoring",id:"8-monitoring",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"staking-api",children:"Staking API"}),"\n",(0,i.jsx)(n.p,{children:"The Staking API Service is a critical component of the Babylon Phase-1 system,\nfocused on serving information about the state of the network\nand receiving unbonding requests for further processing.\nThe API can be utilised by user facing applications, such as staking dApps."}),"\n",(0,i.jsx)(n.h2,{id:"1-hardware-requirements",children:"1. Hardware Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CPU: Multi-core processor (4 cores minimum)"}),"\n",(0,i.jsx)(n.li,{children:"Memory: Minimum 4GB RAM, recommended 8GB RAM"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"2-install-staking-api",children:"2. Install Staking API"}),"\n",(0,i.jsx)(n.h3,{id:"21-clone-the-repository-to-your-local-machine-from-github",children:"2.1 Clone the repository to your local machine from Github"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:babylonlabs-io/staking-api-service.git\n"})}),"\n",(0,i.jsx)(n.h3,{id:"22-check-out-the-desired-version",children:"2.2 Check out the desired version"}),"\n",(0,i.jsxs)(n.p,{children:["You can find the latest release\n",(0,i.jsx)(n.a,{href:"https://github.com/babylonlabs-io/staking-api-service/releases",children:"here"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd staking-api-service\ngit checkout tags/{VERSION}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"23-install-the-binary-by-running",children:"2.3 Install the binary by running"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"make install\n"})}),"\n",(0,i.jsx)(n.h2,{id:"3-configuration",children:"3. Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"31-create-home-directory",children:"3.1 Create home directory"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/.staking-api-service/\n"})}),"\n",(0,i.jsx)(n.h3,{id:"32-copy-the-default-configuration",children:"3.2 Copy the default configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cp ~/staking-api-service/config/config-local.yml ~/.staking-api-service/config.yml\n"})}),"\n",(0,i.jsx)(n.h3,{id:"33-update-default-configurations",children:"3.3 Update default configurations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"MongoDB cluster to connect to"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Set the MongoDB connection address (",(0,i.jsx)(n.code,{children:"address"}),")\nand credentials (",(0,i.jsx)(n.code,{children:"username"}),", ",(0,i.jsx)(n.code,{children:"password"}),", and ",(0,i.jsx)(n.code,{children:"db-name"}),") to match\nthe information from the\n",(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/mongodb",children:"installed MongoDB cluster"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'db:\n  address: "mongodb://localhost:27017/?directConnection=true"\n  username: "<username>"\n  password: "<password>"\n  db-name: "<db-name>"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"RabbitMQ cluster to connect to"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Set the RabbitMQ connection address (",(0,i.jsx)(n.code,{children:"url"}),")\nand credentials (",(0,i.jsx)(n.code,{children:"queue_user"})," and ",(0,i.jsx)(n.code,{children:"queue_password"}),")\nto match the information from the\n",(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/rabbitmq",children:"installed RabbitMQ cluster"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:'queue:\n  queue_user: admin\n  queue_password: password\n  url: "localhost:5672"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Prometheus metrics configuration:"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Set the ",(0,i.jsx)(n.code,{children:"host"})," and ",(0,i.jsx)(n.code,{children:"port"})," to customize how the metrics are exposed"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",children:"metrics:\n  host: 0.0.0.0\n  port: 2112\n"})}),"\n",(0,i.jsx)(n.h2,{id:"4-download-global-params",children:"4. Download global params"}),"\n",(0,i.jsxs)(n.p,{children:["To run the Staking API, a ",(0,i.jsx)(n.code,{children:"global-params.json"})," file\nwhich defines all the staking parameters is needed."]}),"\n",(0,i.jsxs)(n.p,{children:["To download the global parameters,\nfollow ",(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/global-params#staking-parameters",children:"these"})," instructions."]}),"\n",(0,i.jsx)(n.h2,{id:"5-download-finality-providers",children:"5. Download finality providers"}),"\n",(0,i.jsxs)(n.p,{children:["To run the Staking API, a ",(0,i.jsx)(n.code,{children:"finality-provider.json"})," file\nthat associates finality provider\nBTC public keys with additional information about them such\nas their moniker, commission is needed."]}),"\n",(0,i.jsxs)(n.p,{children:["To generate the concatenated finality providers information\nfrom Babylon registry,\nfollow ",(0,i.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/global-params#22-generating-concatenated-finality-provider-information",children:"these"}),"\ninstructions."]}),"\n",(0,i.jsx)(n.h2,{id:"6-start-staking-api",children:"6. Start Staking API"}),"\n",(0,i.jsx)(n.p,{children:"You can start the Staking API by running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"staking-api-service --config ~/.staking-api-service/config.yml \\\n--params ~/.staking-api-service/global-params.json \\\n--finality-providers ~/.staking-api-service/finality-providers.json\n"})}),"\n",(0,i.jsx)(n.h2,{id:"7-create-systemd-service-optional---linux-only",children:"7. Create systemd service (Optional - Linux Only)"}),"\n",(0,i.jsx)(n.h3,{id:"71-create-systemd-service-definition",children:"7.1 Create systemd service definition"}),"\n",(0,i.jsxs)(n.p,{children:["Run the following command, replacing ",(0,i.jsx)(n.code,{children:"system_username"}),"\nwith the appropriate system user or service account name:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cat <<EOF | sudo tee /etc/systemd/system/staking-api.service\n[Unit]\nDescription=Staking API service\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=$(which staking-api-service)  \\\n          --config /home/system_username/.staking-api-service/config.yml \\\n          --params /home/system_username/.staking-api-service/global-params.json \\\n          --finality-providers /home/system_username/.staking-api-service/finality-providers.json\nRestart=on-failure\nUser=system_username\n\n[Install]\nWantedBy=multi-user.target\nEOF\n"})}),"\n",(0,i.jsx)(n.h3,{id:"72-reload-systemd-manager-configuration",children:"7.2 Reload systemd manager configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,i.jsx)(n.h3,{id:"73-enable-the-service-to-start-on-boot",children:"7.3 Enable the service to start on boot"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable staking-api.service\n"})}),"\n",(0,i.jsx)(n.h3,{id:"74-start-the-service",children:"7.4 Start the service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start staking-api.service\n"})}),"\n",(0,i.jsx)(n.h3,{id:"75-verify-staking-api-is-running",children:"7.5. Verify Staking API is running"}),"\n",(0,i.jsx)(n.p,{children:"Check staking-api service status:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status staking-api\n"})}),"\n",(0,i.jsx)(n.p,{children:"Expected log:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-accesslog",children:'Jul 04 03:36:05 system_username staking-api-service[824224]: {"level":"debug","time":"2024-07-04T03:36:05Z","message":"Index created successfully on collection: unbonding_queue"}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","time":"2024-07-04T03:36:05Z","message":"Collections and Indexes created successfully."}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","queueName":"active_staking_queue","time":"2024-07-04T03:36:05Z","message":"start receiving messages from queue"}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","queueName":"expired_staking_queue","time":"2024-07-04T03:36:05Z","message":"start receiving messages from queue"}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","queueName":"unbonding_staking_queue","time":"2024-07-04T03:36:05Z","message":"start receiving messages from queue"}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","queueName":"withdraw_staking_queue","time":"2024-07-04T03:36:05Z","message":"start receiving messages from queue"}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","queueName":"staking_stats_queue","time":"2024-07-04T03:36:05Z","message":"start receiving messages from queue"}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","queueName":"btc_info_queue","time":"2024-07-04T03:36:05Z","message":"start receiving messages from queue"}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","time":"2024-07-04T03:36:05Z","message":"Initiated Health Check Cron"}\nJul 04 03:36:05 system_username staking-api-service[824224]: {"level":"info","time":"2024-07-04T03:36:05Z","message":"Starting server on 0.0.0.0:8092"}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"8-monitoring",children:"8. Monitoring"}),"\n",(0,i.jsxs)(n.p,{children:["The service exposes Prometheus metrics through a Prometheus server.\nBy default, the server is reachable under ",(0,i.jsx)(n.code,{children:"127.0.0.1:2112"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(6540);const a={},t=i.createContext(a);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);