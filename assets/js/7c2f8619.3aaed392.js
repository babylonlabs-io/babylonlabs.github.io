"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[4637],{6285:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>y,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var o=s(4848),t=s(8453);const d={id:"babylondkeysshow",sidebar_label:"babylond keys show",hide_table_of_contents:!0},a="babylond keys show",r={id:"cli/babylond/keys/babylondkeysshow",title:"babylond keys show",description:"Display the key details by the given key\u2019s name or address. Multisig key will be generated if multiple addresses or names are specified.",source:"@site/docs/cli/babylond/keys/babylondkeysshow.md",sourceDirName:"cli/babylond/keys",slug:"/cli/babylond/keys/babylondkeysshow",permalink:"/docs/cli/babylond/keys/babylondkeysshow",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/keys/babylondkeysshow.md",tags:[],version:"current",frontMatter:{id:"babylondkeysshow",sidebar_label:"babylond keys show",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond keys rename",permalink:"/docs/cli/babylond/keys/babylondkeysrename"},next:{title:"babylond migrate",permalink:"/docs/cli/babylond/migrate"}},i={},l=[{value:"keys show command",id:"keys-show-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"babylond-keys-show",children:"babylond keys show"}),"\n",(0,o.jsx)(n.p,{children:"Display the key details by the given key\u2019s name or address. Multisig key will be generated if multiple addresses or names are specified."}),"\n",(0,o.jsx)(n.h2,{id:"keys-show-command",children:"keys show command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"babylond keys show [name_or_address [name_or_address...]] [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'  -a, --address                  Output the address only (overrides --output)\n      --bech string              The Bech32 prefix encoding for a key (acc|val|cons) (default "acc")\n  -d, --device                   Output the address in a ledger device\n  -h, --help                     help for show\n      --multisig-threshold int   K out of N required signatures (default 1)\n  -p, --pubkey                   Output the public key only (overrides --output)\n\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --home string              The application home directory (default "/home/<yourSystemUsername>/.babylond")\n      --keyring-backend string   Select keyring\'s backend (os|file|test) (default "os")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --log_format string        The logging format (json|plain) (default "plain")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --output string            Output format (text|json) (default "text")\n      --trace                    print out full stack trace on e\n'})})]})}function y(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var o=s(6540);const t={},d=o.createContext(t);function a(e){const n=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);