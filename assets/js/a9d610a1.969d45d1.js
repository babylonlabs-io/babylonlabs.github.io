"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[1230],{8638:(n,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>b,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var e=r(4848),i=r(8453);const o={id:"babylond_query_distribution_validator-outstanding-rewards",sidebar_label:"babylond query distribution validator-outstanding-rewards",hide_table_of_contents:!0},a="babylond query distribution validator-outstanding-rewards",d={id:"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards",title:"babylond query distribution validator-outstanding-rewards",description:"Querying distribution of outstanding (un-withdrawn) rewards for validator and all their delegations.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_validator_outstanding_rewards.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_distribution",slug:"/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_validator_outstanding_rewards.md",tags:[],version:"current",frontMatter:{id:"babylond_query_distribution_validator-outstanding-rewards",sidebar_label:"babylond query distribution validator-outstanding-rewards",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query distribution slashes",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes"},next:{title:"babylond query epoching",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_epoching"}},s={},l=[{value:"query distribution validator-outstanding-rewards command",id:"query-distribution-validator-outstanding-rewards-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function u(n){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:"babylond-query-distribution-validator-outstanding-rewards",children:"babylond query distribution validator-outstanding-rewards"}),"\n",(0,e.jsx)(t.p,{children:"Querying distribution of outstanding (un-withdrawn) rewards for validator and all their delegations."}),"\n",(0,e.jsx)(t.h2,{id:"query-distribution-validator-outstanding-rewards-command",children:"query distribution validator-outstanding-rewards command"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:"babylond query distribution validator-outstanding-rewards [validator] [flags]\n"})}),"\n",(0,e.jsx)(t.h3,{id:"example-command",children:"Example Command"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:"$ babylond query distribution validator-outstanding-rewards babylondloper12345xwnmfayc64ycprww49n33mtm92ne\n"})}),"\n",(0,e.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:'      --height int      Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help            help for validator-outstanding-rewards\n      --node string     <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n  -o, --output string   Output format (text|json) (default "text")\n'})}),"\n",(0,e.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function b(n={}){const{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(u,{...n})}):u(n)}},8453:(n,t,r)=>{r.d(t,{R:()=>a,x:()=>d});var e=r(6540);const i={},o=e.createContext(i);function a(n){const t=e.useContext(o);return e.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function d(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),e.createElement(o.Provider,{value:t},n.children)}}}]);