"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[9100],{146:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>b,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var o=t(4848),a=t(8453);const l={id:"babylond_query_bank_total",sidebar_label:"babylond query bank total",hide_table_of_contents:!0},r="babylond query bank total",i={id:"cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",title:"babylond query bank total",description:"Querying the total supply of the chain\u2019s coin.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_total.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_bank",slug:"/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_bank/Babylond_query_bank_total.md",tags:[],version:"current",frontMatter:{id:"babylond_query_bank_total",sidebar_label:"babylond query bank total",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query bank denom-metadata",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata"},next:{title:"babylond query block",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_block"}},d={},s=[{value:"query bank total command",id:"query-bank-total-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"babylond-query-bank-total",children:"babylond query bank total"}),"\n",(0,o.jsx)(e.p,{children:"Querying the total supply of the chain\u2019s coin."}),"\n",(0,o.jsx)(e.h2,{id:"query-bank-total-command",children:"query bank total command"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"babylond query bank total [flags]\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'      --count-total       count total number of records in all supply totals to query for\n      --denom string      The specific balance denomination to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for total\n      --limit uint        pagination limit of all supply totals to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of all supply totals to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of all supply totals to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of all supply totals to query for\n      --reverse           results are sorted in descending order\n'})}),"\n",(0,o.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function b(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>i});var o=t(6540);const a={},l=o.createContext(a);function r(n){const e=o.useContext(l);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),o.createElement(l.Provider,{value:e},n.children)}}}]);