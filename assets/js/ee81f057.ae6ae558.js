"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[8746],{7956:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var o=r(4848),t=r(8453);const a={id:"Babylond_query_ibc_transfer_denom-traces",sidebar_label:"babylond query ibc-transfer denom-traces",hide_table_of_contents:!0},i="babylond query ibc-transfer denom-traces",d={id:"cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces",title:"babylond query ibc-transfer denom-traces",description:"Query the trace info for all token denominations.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_ibc",slug:"/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces.md",tags:[],version:"current",frontMatter:{id:"Babylond_query_ibc_transfer_denom-traces",sidebar_label:"babylond query ibc-transfer denom-traces",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query ibc-transfer denom-trace",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace"},next:{title:"babylond query ibc-transfer escrow-address",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address"}},s={},c=[{value:"query ibc-transfer denom-traces command",id:"query-ibc-transfer-denom-traces-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"babylond-query-ibc-transfer-denom-traces",children:"babylond query ibc-transfer denom-traces"}),"\n",(0,o.jsx)(n.p,{children:"Query the trace info for all token denominations."}),"\n",(0,o.jsx)(n.h2,{id:"query-ibc-transfer-denom-traces-command",children:"query ibc-transfer denom-traces command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"babylond query ibc-transfer denom-traces [flags]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"example-command",children:"Example Command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"$ babylond query ibc-transfer denom-traces\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --count-total       count total number of records in denominations trace to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for denom-traces\n      --limit uint        pagination limit of denominations trace to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of denominations trace to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of denominations trace to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of denominations trace to query for\n      --reverse           results are sorted in descending order\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var o=r(6540);const t={},a=o.createContext(t);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);