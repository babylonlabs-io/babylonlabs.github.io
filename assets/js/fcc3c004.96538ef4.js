"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[6713],{993:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=t(4848),o=t(8453);const s={id:"mongodb",sidebar_label:"MongoDB",hide_table_of_contents:!1},r="Mongodb Setup",a={id:"user-guides/bitcoin-staking-phase1/backend-deployment/infra/mongodb",title:"Mongodb Setup",description:"1. Hardware Requirements",source:"@site/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/mongodb.md",sourceDirName:"user-guides/bitcoin-staking-phase1/backend-deployment/infra",slug:"/user-guides/bitcoin-staking-phase1/backend-deployment/infra/mongodb",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/mongodb",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/mongodb.md",tags:[],version:"current",frontMatter:{id:"mongodb",sidebar_label:"MongoDB",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"Required Infrastructure Setup",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/overview"},next:{title:"RabbitMQ",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/rabbitmq"}},l={},c=[{value:"1. Hardware Requirements",id:"1-hardware-requirements",level:2},{value:"2. Install MongoDB",id:"2-install-mongodb",level:2},{value:"3. Configure MongoDB Replica Set",id:"3-configure-mongodb-replica-set",level:2},{value:"3.1 Edit MongoDB configuration file",id:"31-edit-mongodb-configuration-file",level:3},{value:"3.2 Add the replica set configuration",id:"32-add-the-replica-set-configuration",level:3},{value:"3.3 Restart MongoDB to apply changes",id:"33-restart-mongodb-to-apply-changes",level:3},{value:"3.4 Initialize the replica set",id:"34-initialize-the-replica-set",level:3},{value:"3.5 Verify the replica set configuration",id:"35-verify-the-replica-set-configuration",level:3},{value:"4. Create MongoDB credentials",id:"4-create-mongodb-credentials",level:2},{value:"5. Monitoring",id:"5-monitoring",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"mongodb-setup",children:"Mongodb Setup"}),"\n",(0,i.jsx)(n.h2,{id:"1-hardware-requirements",children:"1. Hardware Requirements"}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"info",children:(0,i.jsxs)(n.p,{children:["For the most accurate and up-to-date hardware recommendations,\nplease refer to the official\n",(0,i.jsx)(n.a,{href:"https://www.mongodb.com/docs/cloud-manager/tutorial/provisioning-prep/#deployment-prerequisites",children:"documentation"})]})}),"\n",(0,i.jsx)(n.p,{children:"The system requires a MongoDB replica set cluster\nfor data redundancy and high availability."}),"\n",(0,i.jsx)(n.p,{children:"For production deployments, we strongly recommend a multi-node cluster\nto ensure optimal performance and reliability."}),"\n",(0,i.jsx)(n.p,{children:"Hardware Specifications:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CPU: Multi-core processors."}),"\n",(0,i.jsx)(n.li,{children:"Memory: Minimum 4GB RAM per node."}),"\n",(0,i.jsx)(n.li,{children:"Storage: SSDs recommended for better performance."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The MongoDB Agent must be installed only on 64-bit architectures."}),"\n",(0,i.jsx)(n.h2,{id:"2-install-mongodb",children:"2. Install MongoDB"}),"\n",(0,i.jsxs)(n.p,{children:["According to your operating system, follow the official instructions to install\n",(0,i.jsx)(n.a,{href:"https://www.mongodb.com/docs/manual/administration/install-community/",children:"MongoDB"})]}),"\n",(0,i.jsx)(n.h2,{id:"3-configure-mongodb-replica-set",children:"3. Configure MongoDB Replica Set"}),"\n",(0,i.jsx)(n.h3,{id:"31-edit-mongodb-configuration-file",children:"3.1 Edit MongoDB configuration file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo vi /etc/mongod.conf\n"})}),"\n",(0,i.jsx)(n.h3,{id:"32-add-the-replica-set-configuration",children:"3.2 Add the replica set configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Find the ",(0,i.jsx)(n.code,{children:"replication"})," section and add the following:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'replication:\n   replSetName: "rs0"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This process instructs MongoDB to start up\nas part of the specified replica set (",(0,i.jsx)(n.code,{children:"rs0"})," in this case)."]}),"\n",(0,i.jsx)(n.h3,{id:"33-restart-mongodb-to-apply-changes",children:"3.3 Restart MongoDB to apply changes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart mongod\n"})}),"\n",(0,i.jsx)(n.h3,{id:"34-initialize-the-replica-set",children:"3.4 Initialize the replica set"}),"\n",(0,i.jsxs)(n.p,{children:["Start the MongoDB shell and connect to the installed MongoDB instance\nrunning on ",(0,i.jsx)(n.code,{children:"localhost"})," at port ",(0,i.jsx)(n.code,{children:"27017"})]}),"\n",(0,i.jsx)(n.p,{children:"If your MongoDB server is running on a different host or port,\nyou can specify them using the --host and --port options respectively."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mongosh --host localhost --port 27017\n"})}),"\n",(0,i.jsx)(n.p,{children:"Inside the MongoDB shell, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rs.initiate()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"35-verify-the-replica-set-configuration",children:"3.5 Verify the replica set configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rs.status()\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The output of ",(0,i.jsx)(n.code,{children:"rs.status()"})," will include information like:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Set Name"})," (set): The name of the replica set."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Members"})," (members): List of replica set members (members array)\nwith details such as ",(0,i.jsx)(n.code,{children:"hostname"}),", ",(0,i.jsx)(n.code,{children:"state"})," (stateStr), ",(0,i.jsx)(n.code,{children:"health"})," (health),\n",(0,i.jsx)(n.code,{children:"uptime"})," (uptime), and ",(0,i.jsx)(n.code,{children:"last heartbeat message"})," (lastHeartbeatMessage)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Here\u2019s a simplified example of how the output look like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:"  set: 'rs0',\n  members: [\n    {\n      _id: 0,\n      name: '127.0.0.1:27017',\n      health: 1,\n      state: 1,\n      stateStr: 'PRIMARY',\n      uptime: 1202009,\n      optime: { ts: Timestamp({ t: 1721191458, i: 1 }), t: Long('1') },\n      optimeDate: ISODate('2024-07-17T04:44:18.000Z'),\n      lastAppliedWallTime: ISODate('2024-07-17T04:44:18.441Z'),\n      lastDurableWallTime: ISODate('2024-07-17T04:44:18.441Z'),\n      syncSourceHost: '',\n      syncSourceId: -1,\n      infoMessage: '',\n      electionTime: Timestamp({ t: 1719989484, i: 2 }),\n      electionDate: ISODate('2024-07-03T06:51:24.000Z'),\n      configVersion: 1,\n      configTerm: 1,\n      self: true,\n      lastHeartbeatMessage: ''\n    }\n  ]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"4-create-mongodb-credentials",children:"4. Create MongoDB credentials"}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"info",children:(0,i.jsx)(n.p,{children:"The exact credentials will later be used by the services to connect to the queues."})}),"\n",(0,i.jsxs)(n.p,{children:["Start the MongoDB shell and connect to the installed MongoDB instance\nrunning on ",(0,i.jsx)(n.code,{children:"localhost"})," at port ",(0,i.jsx)(n.code,{children:"27017"})]}),"\n",(0,i.jsx)(n.p,{children:"If your MongoDB server is running on a different host or port,\nyou can specify them using the --host and --port options respectively."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mongosh --host localhost --port 27017\n"})}),"\n",(0,i.jsx)(n.p,{children:"Inside the MongoDB shell, run the following commands to create a new user::"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'use admin\ndb.createUser({\n  user: "<username>",\n  pwd: "<password>",\n  roles: [ { role: "readWrite", db: "<database>" } ]\n})\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Replace ",(0,i.jsx)(n.code,{children:"<username>"}),", ",(0,i.jsx)(n.code,{children:"<password>"}),", and ",(0,i.jsx)(n.code,{children:"<database>"}),"\nwith your desired username, password, and database name respectively."]}),"\n",(0,i.jsx)(n.h2,{id:"5-monitoring",children:"5. Monitoring"}),"\n",(0,i.jsxs)(n.p,{children:["The MongoDB server availability can be polled through\n",(0,i.jsx)(n.a,{href:"https://github.com/prometheus/blackbox_exporter",children:"Prometheus Blackbox Exporter"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["MongoDB-specific Prometheus metrics can also be exposed\nby utilizing any open-source Prometheus MongoDB exporter\n(",(0,i.jsx)(n.a,{href:"https://github.com/percona/mongodb_exporter",children:"example"}),")."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);