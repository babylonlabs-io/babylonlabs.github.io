"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[1195],{6215:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>b,contentTitle:()=>t,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(4848),a=n(8453);const r={id:"babylonddebugaddr",sidebar_label:"babylond debug addr",hide_table_of_contents:!0},t="babylond debug addr",l={id:"cli/babylond/debug/babylonddebugaddr",title:"babylond debug addr",description:"Convert an address between hex and bech32.",source:"@site/docs/cli/babylond/debug/babylonddebugaddr.md",sourceDirName:"cli/babylond/debug",slug:"/cli/babylond/debug/babylonddebugaddr",permalink:"/docs/cli/babylond/debug/babylonddebugaddr",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/debug/babylonddebugaddr.md",tags:[],version:"current",frontMatter:{id:"babylonddebugaddr",sidebar_label:"babylond debug addr",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond debug",permalink:"/docs/cli/babylond/debug/babylonddebug"},next:{title:"babylond debug pubkey",permalink:"/docs/cli/babylond/debug/babylonddebugpubkey"}},b={},s=[{value:"debug addr command",id:"debug-addr-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function i(e){const d={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(d.h1,{id:"babylond-debug-addr",children:"babylond debug addr"}),"\n",(0,o.jsx)(d.p,{children:"Convert an address between hex and bech32."}),"\n",(0,o.jsx)(d.h2,{id:"debug-addr-command",children:"debug addr command"}),"\n",(0,o.jsx)(d.pre,{children:(0,o.jsx)(d.code,{children:"babylond debug addr [address] [flag]\n"})}),"\n",(0,o.jsx)(d.h3,{id:"example-command",children:"Example Command"}),"\n",(0,o.jsx)(d.pre,{children:(0,o.jsx)(d.code,{children:"$ babylond debug addr cosmos12345tdzjh8p2xq95kk0exp7shwjklj\n"})}),"\n",(0,o.jsx)(d.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(d.pre,{children:(0,o.jsx)(d.code,{children:" -h, --help   help for addr\n"})}),"\n",(0,o.jsx)(d.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(d.pre,{children:(0,o.jsx)(d.code,{children:'--home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n--log_format string   The logging format (json|plain) (default "plain")\n--log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n--trace               print out full stack trace on errors\n'})})]})}function c(e={}){const{wrapper:d}={...(0,a.R)(),...e.components};return d?(0,o.jsx)(d,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},8453:(e,d,n)=>{n.d(d,{R:()=>t,x:()=>l});var o=n(6540);const a={},r=o.createContext(a);function t(e){const d=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function l(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),o.createElement(r.Provider,{value:d},e.children)}}}]);