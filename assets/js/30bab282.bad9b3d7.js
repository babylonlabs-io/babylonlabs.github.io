"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[4279],{9909:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var o=t(4848),r=t(8453);const i={id:"babylondkeysimport",sidebar_label:"babylond keys import",hide_table_of_contents:!0},s="babylond keys import",l={id:"cli/babylond/keys/babylondkeysimport",title:"babylond keys import",description:"Import private keys into the local key base.",source:"@site/docs/cli/babylond/keys/babylondkeysimport.md",sourceDirName:"cli/babylond/keys",slug:"/cli/babylond/keys/babylondkeysimport",permalink:"/docs/cli/babylond/keys/babylondkeysimport",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/keys/babylondkeysimport.md",tags:[],version:"current",frontMatter:{id:"babylondkeysimport",sidebar_label:"babylond keys import",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond keys export",permalink:"/docs/cli/babylond/keys/babylondkeysexport"},next:{title:"babylond keys list",permalink:"/docs/cli/babylond/keys/babylondkeyslist"}},a={},d=[{value:"keys import command",id:"keys-import-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"babylond-keys-import",children:"babylond keys import"}),"\n",(0,o.jsx)(n.p,{children:"Import private keys into the local key base."}),"\n",(0,o.jsx)(n.h2,{id:"keys-import-command",children:"keys import command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"babylond keys import <name> <keyfile> [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"-h, --help   help for import\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --home string              The application home directory (default "/home/<yourSystemUsername>/.babylond")\n      --keyring-backend string   Select keyring\'s backend (os|file|test) (default "os")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --log_format string        The logging format (json|plain) (default "plain")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --output string            Output format (text|json) (default "text")\n      --trace                    print out full stack trace on errors\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var o=t(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);