"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[309],{188:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>b,frontMatter:()=>c,metadata:()=>d,toc:()=>r});var o=t(4848),i=t(8453);const c={id:"babylond_tx_checkpointing",sidebar_label:"babylond tx checkpointing",hide_table_of_contents:!0},a="babylond tx checkpointing",d={id:"cli/babylond/Babylond_tx/babylond_tx_checkpointing",title:"babylond tx checkpointing",description:"Querying subcommands for the checkpointing transactions.",source:"@site/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing.md",sourceDirName:"cli/babylond/Babylond_tx",slug:"/cli/babylond/Babylond_tx/babylond_tx_checkpointing",permalink:"/docs/cli/babylond/Babylond_tx/babylond_tx_checkpointing",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing.md",tags:[],version:"current",frontMatter:{id:"babylond_tx_checkpointing",sidebar_label:"babylond tx checkpointing",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond tx btclightclient insert-header",permalink:"/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient/babylond_tx_btclightclient_insert-header"},next:{title:"babylond tx checkpointing create-validator",permalink:"/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_create-validator"}},l={},r=[{value:"tx checkpointing commands",id:"tx-checkpointing-commands",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function s(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"babylond-tx-checkpointing",children:"babylond tx checkpointing"}),"\n",(0,o.jsx)(e.p,{children:"Querying subcommands for the checkpointing transactions."}),"\n",(0,o.jsx)(e.h2,{id:"tx-checkpointing-commands",children:"tx checkpointing commands"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"babylond tx checkpointing [flags]\nbabylond tx checkpointing [command]\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"-h, --help   help for checkpointing\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function b(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(s,{...n})}):s(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>d});var o=t(6540);const i={},c=o.createContext(i);function a(n){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),o.createElement(c.Provider,{value:e},n.children)}}}]);