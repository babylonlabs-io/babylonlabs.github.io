"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[3759],{5982:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>u,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var o=t(4848),a=t(8453);const r={id:"babylond_query_auth_accounts",sidebar_label:"babylond query auth accounts",hide_table_of_contents:!0},u="babylond query auth accounts",c={id:"cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts",title:"babylond query auth accounts",description:"Querying all the accounts authentication modules.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_accounts.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_auth",slug:"/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_auth/Babylond_query_auth_accounts.md",tags:[],version:"current",frontMatter:{id:"babylond_query_auth_accounts",sidebar_label:"babylond query auth accounts",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query auth account",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_account"},next:{title:"babylond query auth address by-acc-num",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num"}},l={},s=[{value:"query auth accounts command",id:"query-auth-accounts-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function i(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"babylond-query-auth-accounts",children:"babylond query auth accounts"}),"\n",(0,o.jsx)(e.p,{children:"Querying all the accounts authentication modules."}),"\n",(0,o.jsx)(e.h2,{id:"query-auth-accounts-command",children:"query auth accounts command"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"babylond query auth accounts [flags]\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'      --count-total       count total number of records in all-accounts to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for accounts\n      --limit uint        pagination limit of all-accounts to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of all-accounts to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of all-accounts to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of all-accounts to query for\n      --reverse           results are sorted in descending order\n'})}),"\n",(0,o.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'--chain-id string     The network chain ID\n--home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n--log_format string   The logging format (json|plain) (default "plain")\n--log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n--trace               print out full stack trace on errors\n'})})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(i,{...n})}):i(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>u,x:()=>c});var o=t(6540);const a={},r=o.createContext(a);function u(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:u(n.components),o.createElement(r.Provider,{value:e},n.children)}}}]);