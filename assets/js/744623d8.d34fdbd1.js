"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[1969],{3175:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=s(4848),o=s(8453);const i={id:"setup-node",sidebar_label:"Set up a Node",hide_table_of_contents:!0},r="Set up a Node",a={id:"user-guides/btc-staking-testnet/setup-node",title:"Set up a Node",description:"Learn how to set up a node for the Babylon system.",source:"@site/docs/user-guides/btc-staking-testnet/setup-node.md",sourceDirName:"user-guides/btc-staking-testnet",slug:"/user-guides/btc-staking-testnet/setup-node",permalink:"/docs/user-guides/btc-staking-testnet/setup-node",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/btc-staking-testnet/setup-node.md",tags:[],version:"current",frontMatter:{id:"setup-node",sidebar_label:"Set up a Node",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"Network Information",permalink:"/docs/user-guides/btc-staking-testnet/network-information"},next:{title:"Getting Testnet Tokens",permalink:"/docs/user-guides/btc-staking-testnet/getting-funds"}},d={},c=[{value:"0. System Requirements",id:"0-system-requirements",level:2},{value:"1. Initialize the Node Directory",id:"1-initialize-the-node-directory",level:2},{value:"2. Add Peers and Modify Configuration",id:"2-add-peers-and-modify-configuration",level:2},{value:"3. Setup Cosmovisor",id:"3-setup-cosmovisor",level:2},{value:"4. Start the Node",id:"4-start-the-node",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"set-up-a-node",children:"Set up a Node"}),"\n",(0,t.jsx)(n.p,{children:"Learn how to set up a node for the Babylon system."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.admonition,{title:"Note",type:"info",children:(0,t.jsxs)(n.p,{children:["This guide requires having Babylon installed on a Linux System. The instructions\ncan be found on the ",(0,t.jsx)(n.a,{href:"/docs/user-guides/installation",children:"Installation page"})," The\nversion to install is specified at the ",(0,t.jsx)(n.a,{href:"https://github.com/babylonlabs-io/networks/tree/main/bbn-test-3",children:"bbn-test-3 network info\npage"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"0-system-requirements",children:"0. System Requirements"}),"\n",(0,t.jsx)(n.p,{children:"This system spec has been tested by validators and found to be comfortable:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Quad Core or larger AMD or Intel (amd64) CPU"}),"\n",(0,t.jsx)(n.li,{children:"32GB RAM"}),"\n",(0,t.jsx)(n.li,{children:"1TB NVMe Storage"}),"\n",(0,t.jsx)(n.li,{children:"100MBps bidirectional internet connection"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You can run Babylon on lower-spec hardware for each component, but you may find\nthat it is not highly performant or prone to crashing."}),"\n",(0,t.jsx)(n.h2,{id:"1-initialize-the-node-directory",children:"1. Initialize the Node Directory"}),"\n",(0,t.jsxs)(n.p,{children:["First, initialize a node configuration directory under ",(0,t.jsx)(n.code,{children:"~/.babylond"}),". The\n",(0,t.jsx)(n.code,{children:"$NODENAME"})," variable specifies the name you aim to give your node."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"babylond init $NODENAME --chain-id bbn-test-3\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then, retrieve the genesis file and place it in the node directory:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"wget https://github.com/babylonlabs-io/networks/raw/main/bbn-test-3/genesis.tar.bz2\ntar -xjf genesis.tar.bz2 && rm genesis.tar.bz2\nmv genesis.json ~/.babylond/config/genesis.json\n"})}),"\n",(0,t.jsx)(n.h2,{id:"2-add-peers-and-modify-configuration",children:"2. Add Peers and Modify Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["Edit the configuration file at ",(0,t.jsx)(n.code,{children:"~/.babylond/config/config.toml"})," and modify the\n",(0,t.jsx)(n.code,{children:"seeds"})," and ",(0,t.jsx)(n.code,{children:"persistent_peers"})," attributes to contain appropriate seeds and peers\nof your choice. The full list of Babylon approved seeds and peers can be found\nunder the ",(0,t.jsx)(n.a,{href:"https://github.com/babylonlabs-io/networks/tree/main/bbn-test-3",children:"bbn-test-3 network info\npage"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Edit the configuration file at ",(0,t.jsx)(n.code,{children:"~/.babylond/config/app.toml"})," and modify the\n",(0,t.jsx)(n.code,{children:"btc-network"})," attribute to contain the appropriate BTC network parameters as\nbelow and ",(0,t.jsx)(n.code,{children:"iavl-cache-size=0"})," to handle caching issues."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'iavl-cache-size = 0\n\n[btc-config]\nnetwork = "signet"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["On the same file, you can also modify the ",(0,t.jsx)(n.code,{children:"minimum-gas-prices"})," attribute and set\nit to a value of your choosing. For example,"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'minimum-gas-prices = "0.00001ubbn"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"3-setup-cosmovisor",children:"3. Setup Cosmovisor"}),"\n",(0,t.jsx)(n.p,{children:"To install the latest version of Cosmovisor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@latest\n"})}),"\n",(0,t.jsx)(n.p,{children:"Create the necessary directories"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"mkdir -p ~/.babylond\nmkdir -p ~/.babylond/cosmovisor\nmkdir -p ~/.babylond/cosmovisor/genesis\nmkdir -p ~/.babylond/cosmovisor/genesis/bin\nmkdir -p ~/.babylond/cosmovisor/upgrades\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Copy the ",(0,t.jsx)(n.code,{children:"babylond"})," binary into the ",(0,t.jsx)(n.code,{children:"cosmovisor/genesis"})," folder"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"cp $GOPATH/bin/babylond ~/.babylond/cosmovisor/genesis/bin/babylond\n"})}),"\n",(0,t.jsx)(n.p,{children:"Setup a cosmovisor service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:'sudo tee /etc/systemd/system/babylond.service > /dev/null <<EOF\n[Unit]\nDescription=Babylon daemon\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$(which cosmovisor) run start --x-crisis-skip-assert-invariants\nRestart=always\nRestartSec=3\nLimitNOFILE=infinity\n\nEnvironment="DAEMON_NAME=babylond"\nEnvironment="DAEMON_HOME=${HOME}/.babylond"\nEnvironment="DAEMON_RESTART_AFTER_UPGRADE=true"\nEnvironment="DAEMON_ALLOW_DOWNLOAD_BINARIES=false"\n\n[Install]\nWantedBy=multi-user.target\nEOF\n'})}),"\n",(0,t.jsx)(n.h2,{id:"4-start-the-node",children:"4. Start the Node"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"sudo -S systemctl daemon-reload\nsudo -S systemctl enable babylond\nsudo -S systemctl start babylond\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can check the status of the node by running"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-console",children:"systemctl status babylond\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(6540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);