"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[9235],{96:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>y,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var o=t(4848),d=t(8453);const r={id:"babylondkeysdd",sidebar_label:"babylond keys add",hide_table_of_contents:!0},a="babylond keys add",i={id:"cli/babylond/keys/babylondkeysdd",title:"babylond keys add",description:"Add an encrypted private key (either newly generated or recovered), encrypt it, and save it to your file name.",source:"@site/docs/cli/babylond/keys/babylondkeysdd.md",sourceDirName:"cli/babylond/keys",slug:"/cli/babylond/keys/babylondkeysdd",permalink:"/docs/cli/babylond/keys/babylondkeysdd",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/keys/babylondkeysdd.md",tags:[],version:"current",frontMatter:{id:"babylondkeysdd",sidebar_label:"babylond keys add",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond keys",permalink:"/docs/cli/babylond/keys/babylondkeys"},next:{title:"babylond keys delete",permalink:"/docs/cli/babylond/keys/babylondkeysdelete"}},s={},l=[{value:"keys add command",id:"keys-add-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"babylond-keys-add",children:"babylond keys add"}),"\n",(0,o.jsx)(n.p,{children:"Add an encrypted private key (either newly generated or recovered), encrypt it, and save it to your file name."}),"\n",(0,o.jsx)(n.h2,{id:"keys-add-command",children:"keys add command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"babylond keys add <name> [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"      --account uint32           Account number for HD derivation (less than equal 2147483647)\n      --algo string              Key signing algorithm to generate keys for (default \"secp256k1\")\n      --coin-type uint32         coin type number for HD derivation (default 118)\n      --dry-run                  Perform action, but don't add key to local keystore\n      --hd-path string           Manual HD Path derivation (overrides BIP44 config)\n  -h, --help                     help for add\n      --index uint32             Address index number for HD derivation (less than equal 2147483647)\n  -i, --interactive              Interactively prompt user for BIP39 passphrase and mnemonic\n      --ledger                   Store a local reference to a private key on a Ledger device\n      --multisig strings         List of key names stored in keyring to construct a public legacy multisig key\n      --multisig-threshold int   K out of N required signatures. For use in conjunction with --multisig (default 1)\n      --no-backup                Don't print out seed phrase (if others are watching the terminal)\n      --nosort                   Keys passed to --multisig are taken in the order they're supplied\n      --pubkey string            Parse a public key in JSON format and saves key info to <name> file.\n      --recover                  Provide seed phrase to recover existing key instead of creating\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'--home string              The application home directory (default "/home/<yourSystemUsername>/.babylond")\n--keyring-backend string   Select keyring\'s backend (os|file|test) (default "os")\n--keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n--log_format string        The logging format (json|plain) (default "plain")\n--log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n--output string            Output format (text|json) (default "text")\n --trace                    print out full stack trace on errors\n'})})]})}function y(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(6540);const d={},r=o.createContext(d);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);