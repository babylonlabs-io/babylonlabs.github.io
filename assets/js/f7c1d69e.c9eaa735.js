"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[7062],{2105:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>b,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=t(4848),o=t(8453);const s={id:"babylond_query_distribution_slashes",sidebar_label:"babylond query distribution slashes",hide_table_of_contents:!0},r="babylond query distribution slashes",a={id:"cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",title:"babylond query distribution slashes",description:"Querying all slashes of a validator for the given block height.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_slashes.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_distribution",slug:"/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/Babylond_query_distribution_slashes.md",tags:[],version:"current",frontMatter:{id:"babylond_query_distribution_slashes",sidebar_label:"babylond query distribution slashes",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query distribution rewards",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards"},next:{title:"babylond query distribution validator-outstanding-rewards",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards"}},d={},l=[{value:"query distribution slashes command",id:"query-distribution-slashes-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"babylond-query-distribution-slashes",children:"babylond query distribution slashes"}),"\n",(0,i.jsx)(n.p,{children:"Querying all slashes of a validator for the given block height."}),"\n",(0,i.jsx)(n.h2,{id:"query-distribution-slashes-command",children:"query distribution slashes command"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"babylond query distribution slashes [validator] [start-height] [end-height] [flags]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example-command",children:"Example Command"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ babylond query distribution slashes babylond12346ccd8ay0zduzj64hwre2fxs9ldmqhffj 0 50\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --count-total       count total number of records in validator slashes to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for slashes\n      --limit uint        pagination limit of validator slashes to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of validator slashes to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of validator slashes to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of validator slashes to query for\n      --reverse           results are sorted in descending order\n'})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function b(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);