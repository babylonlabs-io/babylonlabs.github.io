"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[3987],{9221:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>s});var t=o(4848),i=o(8453);const a={id:"babylond_query_staking_unbounding-delegations",sidebar_label:"babylond query staking unbonding-delegations",hide_table_of_contents:!0},d="babylond query staking unbonding-delegations",r={id:"cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations",title:"babylond query staking unbonding-delegations",description:"Querying all unbonding-delegations records for one delegator.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_unbounding-delegations.md",sourceDirName:"cli/babylond/BabylondQuery/Babylond_query_staking",slug:"/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_staking/Babylond_query_staking_unbounding-delegations.md",tags:[],version:"current",frontMatter:{id:"babylond_query_staking_unbounding-delegations",sidebar_label:"babylond query staking unbonding-delegations",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query staking unbonding-delegation",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegation"},next:{title:"babylond query staking unbonding-delegations-from",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-from"}},l={},s=[{value:"query staking unbonding-delegations command",id:"query-staking-unbonding-delegations-command",level:2},{value:"Example Command",id:"example-command",level:3},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"babylond-query-staking-unbonding-delegations",children:"babylond query staking unbonding-delegations"}),"\n",(0,t.jsx)(e.p,{children:"Querying all unbonding-delegations records for one delegator."}),"\n",(0,t.jsx)(e.h2,{id:"query-staking-unbonding-delegations-command",children:"query staking unbonding-delegations command"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"babylond query staking unbonding-delegations [delegator-addr] [flags]\n"})}),"\n",(0,t.jsx)(e.h3,{id:"example-command",children:"Example Command"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"$ babylond query staking unbonding-delegations babylond1tthjut3ccd8ay0zduzj64hwre2fxs9ld75ru9p\n"})}),"\n",(0,t.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'      --count-total       count total number of records in unbonding delegations to query for\n      --height int        Use a specific height to query state at (this can error if the node is pruning state)\n  -h, --help              help for unbonding-delegations\n      --limit uint        pagination limit of unbonding delegations to query for (default 100)\n      --node string       <host>:<port> to Tendermint RPC interface for this chain (default "tcp://localhost:26657")\n      --offset uint       pagination offset of unbonding delegations to query for\n  -o, --output string     Output format (text|json) (default "text")\n      --page uint         pagination page of unbonding delegations to query for. This sets offset to a multiple of limit (default 1)\n      --page-key string   pagination page-key of unbonding delegations to query for\n      --reverse           results are sorted in descending order\n'})}),"\n",(0,t.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function g(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>d,x:()=>r});var t=o(6540);const i={},a=t.createContext(i);function d(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:d(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);