"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[5380],{4604:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=o(4848),t=o(8453);const r={id:"babylond_query_staking",sidebar_label:"babylond query staking",hide_table_of_contents:!0},i="babylond query staking",s={id:"cli/babylond/BabylondQuery/babylond_query_staking",title:"babylond query staking",description:"Querying commands for the staking module.",source:"@site/docs/cli/babylond/BabylondQuery/Babylond_query_staking.md",sourceDirName:"cli/babylond/BabylondQuery",slug:"/cli/babylond/BabylondQuery/babylond_query_staking",permalink:"/docs/cli/babylond/BabylondQuery/babylond_query_staking",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/BabylondQuery/Babylond_query_staking.md",tags:[],version:"current",frontMatter:{id:"babylond_query_staking",sidebar_label:"babylond query staking",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond query slashing signing-infos",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-infos"},next:{title:"babylond query staking delegation",permalink:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegation"}},d={},l=[{value:"query staking commands",id:"query-staking-commands",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"babylond-query-staking",children:"babylond query staking"}),"\n",(0,a.jsx)(e.p,{children:"Querying commands for the staking module."}),"\n",(0,a.jsx)(e.h2,{id:"query-staking-commands",children:"query staking commands"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"babylond query staking [flags]\nbabylond query staking [command]\n"})}),"\n",(0,a.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"-h, --help   help for staking\n"})}),"\n",(0,a.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'      --chain-id string     The network chain ID\n      --home string         directory for config and data (default "/home/<yourSystemUsername>/.babylond")\n      --log_format string   The logging format (json|plain) (default "plain")\n      --log_level string    The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --trace               print out full stack trace on errors\n'})})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>i,x:()=>s});var a=o(6540);const t={},r=a.createContext(t);function i(n){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);