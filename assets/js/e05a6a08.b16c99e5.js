"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[1181],{9860:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>b,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var l=s(4848),i=s(8453);const a={id:"cli",sidebar_label:"CLI Command Overview",hide_table_of_contents:!0},d="CLI Command Overview",r={id:"cli/babylond/cli",title:"CLI Command Overview",description:"- babylond - Babylon App",source:"@site/docs/cli/babylond/cli.md",sourceDirName:"cli/babylond",slug:"/cli/babylond/cli",permalink:"/docs/cli/babylond/cli",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/cli.md",tags:[],version:"current",frontMatter:{id:"cli",sidebar_label:"CLI Command Overview",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"FAQ",permalink:"/docs/faq/overview"},next:{title:"babylond app",permalink:"/docs/cli/babylond/"}},o={},c=[];function t(n){const e={a:"a",h1:"h1",li:"li",p:"p",ul:"ul",...(0,i.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{id:"cli-command-overview",children:"CLI Command Overview"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/",children:"babylond"})," - Babylon App"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondaddgenesisaccount",children:"add-genesis-account"})," -This is a Cosmos Native CLI, it adds a genesis account to genesis.json"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondaddgenesisbls",children:"add-genesis-bls"})," -This is a Babylon-specific CLI, it adds a genesis BLS Key to genesis.json"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondcollectgentxs",children:"collect-gentxs"})," - This is a Cosmos Native CLI, it collects genesis txs and outputs a genesis.json file"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondconfig",children:"config"})," - This is a Cosmos Native CLI, it creates or queries an application CLI configuration file"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondcreatebls",children:"create-bls-key"})," - This is a Babylon-specific CLI, it creates a pair of BLS keys for a validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondcreategenesiskey",children:"create-genesis-bls"})," - This is a Babylon-specific CLI, it creates a genesis BLS key file for the validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/debug/babylonddebug",children:"debug"})," - This is a Cosmos Native CLI, it is a tool for helping with debugging your application"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/debug/babylonddebugaddr",children:"addr"})," - Convert an address between hex and bech32"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/debug/babylonddebugpubkey",children:"pubkey"})," - Decode a pubkey from proto JSON"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/debug/babylonddebugpubkeyraw",children:"pubkey-raw"})," - Decode a ED25519 or secp256k1 pubkey from hex, base64, or bech32"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/debug/babylonddebugrawbytes",children:"raw-bytes"})," - Convert raw bytes output (eg. [10 21 13 255]) to hex"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondexport",children:"export"})," - This is a Cosmos Native CLI, it exports the state to JSON"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondgentx",children:"gentx"})," -  This is a Cosmos Native CLI, it generates a genesis tx carrying a self delegation"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondhelp",children:"help"})," - This is a Cosmos Native CLI, it helps with any command"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylondinit",children:"init"})," - This is a Cosmos Native CLI, it initializes the private validator, p2p, genesis, and application configuration files"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeys",children:"keys"})," - This is a Cosmos Native CLI, it manages your application\u2019s keys"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysdd",children:"add"})," - Add an encrypted private key (either newly generated or recovered), encrypt it, and save to your file name"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysdelete",children:"delete"})," - Delete the given keys"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysexport",children:"export"})," - Export private keys"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysimport",children:"import"})," - Import private keys into the local keybase"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeyslist",children:"list"})," - List all keys"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysmigrate",children:"migrate"})," - Migrate keys from amino to proto serialization format"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysmnemonic",children:"mnemonic"})," - Compute the bip39 mnemonic for some input entropy"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysparse",children:"parse"})," - Parse address from hex to bech32 and vice versa"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysrename",children:"rename"})," - Rename an existing key"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/keys/babylondkeysshow",children:"show"})," - Retrieve key information by name or address"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/migrate",children:"migrate"})," - This is a Cosmos Native CLI, it migrates genesis to a specified target version"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/preparegenesis",children:"prepare-genesis"})," - This is a Babylon-specific CLI, it prepares a genesis file"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_query",children:"query"})," - Querying subcommand"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_account",children:"account"})," - This is a Cosmos Native CLI, it queries for an account by address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_auth",children:"auth"})," - This is a Cosmos Native CLI, it queries commands for the auth module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_account",children:"account"})," - Query for account by address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_accounts",children:"accounts"})," - Query all the accounts"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_address_by_acc_num",children:"address-by-acc-num"})," - Query for an address by account number"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_account",children:"module-account"})," - Query module account info by module name"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_module_accounts",children:"module-accounts"})," - Query all the module accounts"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_auth/babylond_query_auth_params",children:"params"})," - Query the current auth parameters"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_authz",children:"authz"})," - This is a Cosmos Native CLI, it queries commands for the authz module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_authz/babylond_query_authz_grants",children:"grants"})," - Query grans for a granter-grantee pair and optionally a msg-type-url"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_grantee",children:"grants-by-grantee"})," - Query authorization grants granted to a grantee"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_authz/Babylond_query_authz_grants/babylond_query_authz_grants_by_granter",children:"grants-by-granter"})," - Query authorization grants granted by granter"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_bank",children:"bank"})," - This is a Cosmos Native CLI, it queries commands for the bank module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_balances",children:"balances"})," - Query for account balances by address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_denom_metadata",children:"denom-metadata"})," - Query the client metadata for coin denominations"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_bank/babylond_query_bank_total",children:"total"})," - Query the total supply of coins of the chain"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_block",children:"block"})," - This is a Cosmos Native CLI, it gets the verified data by the given height"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_btccheckpoint",children:"btccheckpoint"})," - This is a Babylon-specific CLI, it queries commands for the btccheckpoint module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_btc-height",children:"btc-height"})," - Retrieve the earliest btc height for the given epoch"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_epoch_submissions",children:"epoch-submissions"})," - All the checkpoint submissions for the given epoch"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btccheckpoint/babylond_query_btccheckpoint_params",children:"params"})," - Show the parameters of the module"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_btclightclient",children:"btclightclient"})," - This is a Babylon-specific CLI, it queries commands for the btclightclient module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_base-header",children:"base-header"})," - Retrieve the base header of the bitcoin blockchain"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_contains",children:"contains"})," - Check whether the module maintains a hash"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_hashes",children:"hashes"})," - Retrieve the hashes maintained by this module"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_main-chain",children:"main-chain"})," - Retrieve the canonical chain"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_params",children:"params"})," - Show the parameters of the module"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_btclightclient/babylond_query_btclightclient_tip",children:"tip"})," - Retrieve the tip of the bitcoin blockchain"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_checkpointing",children:"checkpointing"})," - This is a Babylon-specific CLI, it queries commands for the checkpointing module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_params",children:"params"})," - Show the parameters of the module"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/babylond_query_checkpointing_raw_checkpoint",children:"raw-checkpoint"})," - Retrieve the checkpoint by epoch number"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_checkpointing/Babylond_query_checkpointing_raw-checkpoint/babylond_query_checkpointing_raw-checkpoint_list",children:"raw-checkpoint-list"})," - Retrieve the checkpoints by status"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_distribution",children:"distribution"})," - This is a Cosmos Native CLI, it queries commands for the distribution module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_commission",children:"commission"})," - Query distribution validator commission"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_community-pool",children:"community-pool"})," - Query the amount of coins in the community pool"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_params",children:"params"})," - Query distribution params"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_rewards",children:"rewards"})," - Query all distribution delegator rewards or rewards from a particular validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_slashes",children:"slashes"})," - Query distribution validator slashes"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_distribution/babylond_query_distribution_validator-outstanding-rewards",children:"validator-outstanding-rewards"})," - Query distribution outstanding (un-withdrawn) rewards for validator and all their delegations"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_epoching",children:"epoching"})," - This is a Babylon-specific CLI, it queries commands for the epoching module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_epoching/babylond_query_epoching_params",children:"params"})," - shows the parameters of the module"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_evidence",children:"evidence"}),"  - This is a Cosmos Native CLI, it queries commands for evidence by a hash or for all the paginated submitted evidence"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_freegrant",children:"feegrant"})," - This is a Cosmos Native CLI, it queries commands for the feegrant module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grant",children:"grant"})," - Query details of a single grant"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-grantee",children:"grants-by-grantee"})," - Query all grants of a grantee"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_freegrant/babylond_query_freegrant_grants-by-granter",children:"grants-by-granter"})," - Query all grants by a granter"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_gov",children:"gov"})," - This is a Cosmos Native CLI, it queries commands for the governance module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposit",children:"deposit"})," - Query details of a deposit"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_deposits",children:"deposits"})," - Query deposits on a proposal"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_param",children:"param"})," - Query the parameters (voting|tallying|deposit) of the governance process"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_params",children:"params"})," - Query the parameters of the governance process"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposal",children:"proposal"})," - Query details of a single proposal"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposals",children:"proposals"})," - Query proposals with optional filters"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_proposer",children:"proposer"})," - Query the proposer of a governance proposal"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_tally",children:"tally"})," - Get the tally of a proposal vote"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_vote",children:"vote"})," - Query details of a single vote"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_gov/babylond_query_gov_votes",children:"votes"})," - Query votes on a proposal"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc",children:"ibc"})," - This is a Cosmos Native CLI, it queries commands for the IBC module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel",children:"channel"})," - IBC channel query subcommands"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_channels",children:"channels"})," - Query all channels"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_client-state",children:"client-state"})," - Query the client state associated with a channel"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_connections",children:"connections"})," - Query all channels associated with a connection"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_end",children:"end"})," - Query a channel end"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_next-sequence-receive",children:"next-sequence-receive"})," - Query a next-receive sequence"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-ack",children:"packet-ack"})," - Query a packet acknowledgement"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitment",children:"packet-commitment"})," - Query a packet commitment"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-commitments",children:"packet-commitments"})," - Query all packet commitments associated with a channel"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_packet-receipt",children:"packet-receipt"})," - Query a packet receipt"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-acks",children:"unreceived-acks"})," - Query all the unreceived acks associated with a channel"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_channel/Babylond_query_ibc_channel_unreceived-packets",children:"unreceived-packets"})," - Query all the unreceived packets associated with a channel"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client",children:"client"})," - IBC client query subcommands"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state",children:"consensus-state"})," - Query the consensus state of a client at a given height"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-state-heights",children:"consensus-state-heights"})," - Query the heights of all consensus states of a client."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_consensus-states",children:"consensus-states"})," - Query all the consensus states of a client."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_header",children:"header"})," - Query the latest header of the running chain"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_params",children:"params"})," - Query the current ibc client parameters"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_self-consensus-state",children:"self-consensus-state"})," - Query the self-consensus state for this chain"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_state",children:"state"})," - Query a client state"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_states",children:"states"})," - Query all available light clients"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_client/Babylond_query_ibc_client_status",children:"status"})," - Query client status"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection",children:"connection"})," - IBC connection query subcommands"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_connections",children:"connections"})," - Query all connections"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_end",children:"end"})," - Query stored connection end"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_connection/Babylond_query_ibc_connection_path",children:"path"})," - Query stored client connection paths"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer",children:"ibc-transfer"})," - This is a Cosmos Native CLI, it queries the subcommands for the ibc fungible token transfer module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-hash",children:"denom-hash"})," - Query the denom hash info from a given denom trace"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-trace",children:"denom-trace"})," - Query the denom trace info from a given trace hash or ibc denom"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_denom-traces",children:"denom-traces"})," - Query the trace info for all token denominations"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_escrow-address",children:"escrow-address"})," - Get the escrow address for a channel"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_ibc/Babylond_query_ibc_transfer_params",children:"params"})," - Query the current ibc-transfer parameters"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_mint",children:"mint"})," - This is a Cosmos Native CLI, it queries commands for the minting module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_annual-provisions",children:"annual-provisions"})," - Query the current minting annual provisions value"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_inflation",children:"inflation"})," - Query the current minting inflation value"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_mint/babylond_query_mint_params",children:"params"})," - Query the current minting parameters"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_params",children:"params"})," - This is a Cosmos Native CLI, it queries commands for the params module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_params/babylond_query_params_subspace",children:"subspace"})," - Query for raw parameters by subspace and key"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_slashing",children:"slashing"})," - This is a Cosmos Native CLI, it queries commands for the slashing module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_params",children:"params"})," - Query the current slashing parameters"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-info",children:"signing-info"})," - Query a validator's signing information"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_slashing/babylond_query_slashing_signing-infos",children:"signing-infos"})," - Query signing information of all validators"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_staking",children:"staking"})," - This is a Cosmos Native CLI, it queries commands for the staking module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegation",children:"delegation"})," - Query a delegation based on address and validator address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations",children:"delegations"})," - Query all delegations made by one delegator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_delegations-to",children:"delegations-to"})," - Query all delegations made to one validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_historical-info",children:"historical-info"})," - Query historical info at a given height"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_params",children:"params"})," - Query the current staking parameters information"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_pool",children:"pool"})," - Query the current staking pool values"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation",children:"redelegation"})," - Query a redelegation record based on the delegator and a source and destination validator address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegations",children:"redelegations"})," - Query all redelegations records for one delegator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_redelegation-from",children:"redelegations-from"})," - Query all outgoing redelegations from a validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegation",children:"unbonding-delegation"})," - Query an unbonding-delegation record based on the delegator and validator address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations",children:"unbonding-delegations"})," - Query all unbonding-delegations records for one delegator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_unbounding-delegations-from",children:"unbonding-delegations-from"})," - Query all unbonding delegations from a validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validator",children:"validator"})," - Query a validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_staking/babylond_query_staking_validators",children:"validators"})," - Query for all validators"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_tendermint-validator-set",children:"tendermint-validator-set"})," - Get the full tendermint validator set at a given height"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_tx",children:"tx"}),"  - This is a Cosmos Native CLI, it queries  a transaction by hash"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_txs",children:"txs"})," - This is a Cosmos Native CLI, it queries paginated transactions that match a set of events"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_upgrade",children:"upgrade"})," - This is a Cosmos Native CLI, it queries commands for the upgrade module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_applied",children:"applied"})," - Block header for height at which a completed upgrade was applied"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_module_versions",children:"module_versions"})," - Get the list of module versions"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_upgrade/babylond_query_upgrade_plan",children:"plan"})," - Get upgrade plan (if one exists)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/babylond_query_zoneconcierge",children:"zoneconcierge"})," - This is a Babylon-specific CLI, it queries commands for the zoneconcierge module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/BabylondQuery/Babylond_query_zoneconcierge/babylond_query_zoneconcierge_params",children:"params"})," - Show the parameters of the module"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_rollback",children:"rollback"})," - This is a Cosmos Native CLI, it rolls back cosmos-sdk and tendermint state by one height"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_rosetta",children:"rosetta"})," - This is a Cosmos Native CLI, it spins up a rosetta server"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_start",children:"start"})," - This is a Cosmos Native CLI, it runs the full node"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_status",children:"status"})," - This is a Cosmos Native CLI, it queries the remote node for status"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_tendermint",children:"tendermint"})," -This is a Cosmos Native CLI, it queries the subcommands for tendermint module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_reset-state",children:"reset-state"})," - Remove all the data and WAL"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-address",children:"show-address"})," - Shows this node's tendermint validator consensus address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-node-id",children:"show-node-id"})," - Show this node's ID"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_show-validator",children:"show-validator"})," - Show this node's tendermint validator info"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_unsafe-reset-all",children:"unsafe-reset-all unsafe"})," - Remove all the data and WAL, reset this node's validator to the genesis state"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tendermint/babylond_tendermint_version",children:"version"})," - Print tendermint libraries' version"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_testnet",children:"testnet"})," - This is a Babylon-specific CLI, it initialize files for a Babylon testnet"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_tx",children:"tx"})," - Transactions subcommand"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_authz",children:"authz"})," - This is a Cosmos Native CLI, it queries the subcommands for authorization transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_exec",children:"exec"})," - execute tx on behalf of granter account"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_grant",children:"grant"})," - Grant authorization to an address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_authz/babylond_tx_authz_revoke",children:"revoke"})," - revoke authorization"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_bank",children:"bank"})," - This is a Cosmos Native CLI, it queries subcommand for Bank module"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_multi-send",children:"multi-send"})," - Send funds from one account to two or more accounts."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_bank/babylond_tx_bank_send",children:"send"})," - Send funds from one account to another."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_broadcast",children:"broadcast"})," - This is a Cosmos Native CLI, it broadcast transactions generated offline"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_btccheckpoint",children:"btccheckpoint"})," - This is a Babylon-specific CLI, it queries subcommands for btccheckpoint transactions"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_btclightclient",children:"btclightclient"})," - This is a Babylon-specific CLI, it queries subcommands for btclightclient transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_btclightclient/babylond_tx_btclightclient_insert-header",children:"insert-header"})," - Submit BTC header bytes"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_checkpointing",children:"checkpointing"})," - This is a Babylon-specific CLI, it queries subcommands for checkpointing transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_create-validator",children:"create-validator"})," - Create a new validator initialized with a self-delegation to it"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_checkpointing/babylond_tx_checkpointing_submit",children:"submit"})," - submit a BLS signature"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_crisis",children:"crisis"})," - This is a Cosmos Native CLI, it queries subcommand for crisis transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_crisis/babylond_tx_crisis_invariant-broken",children:"invariant-broken"})," - Submit proof that an invariant broken to halt the chain"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_decode",children:"decode"})," - This is a Cosmos Native CLI, it decodes a binary encoded transaction string"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_distribution",children:"distribution"})," - This is a Cosmos Native CLI, it queries subcommand for Distribution transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_fund-community-pool",children:"fund-community-pool"})," - Funds the community pool with the specified amount"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_set-withdraw-addr",children:"set-withdraw-addr"})," - Change the default withdraw address for rewards associated with an address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-all-rewards",children:"withdraw-all-rewards"})," - Withdraw all delegations rewards for a delegator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_distribution/babylond_tx_distribution_withdraw-rewards",children:"withdraw-rewards"})," - Withdraw rewards from a given delegation address and optionally withdraw validator commission if the delegation address given is a validator operator"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_encode",children:"encode"})," - This is a Cosmos Native CLI, it encodes transactions generated offline"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_epoching",children:"epoching"})," - This is a Babylon-specific CLI, it queries the subcommands for epoching transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_delegate",children:"delegate"})," - Delegate liquid tokens to a validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_redelegate",children:"redelegate"})," - Redelegate illiquid tokens from one validator to another"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_epoching/babylond_tx_epoching_unbond",children:"unbond"})," - Unbond shares from a validator"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_evidence",children:"evidence"})," - This is a Cosmos Native CLI, it queries the subcommands for Evidence transactions"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_feegrant",children:"feegrant"})," - This is a Cosmos Native CLI, it queries the subcommands for Feegrant transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_grant",children:"grant"})," - Grant Fee allowance to an address"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_feegrant/babylond_tx_feegrant_revoke",children:"revoke"})," - Revoke fee-grant"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_gov",children:"gov"})," - This is a Cosmos Native CLI, it queries subcommand for governance transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_deposit",children:"deposit"})," - Deposit tokens for an active proposal"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_draft-proposal",children:"draft-proposal"})," - Generate a draft proposal JSON file. The generated proposal JSON contains only one message (skeleton)."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-legacy-proposal",children:"submit-legacy-proposal"})," - Submit a legacy proposal along with an initial deposit"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_cancel",children:"cancel-software-upgrade"})," - Cancel the current software upgrade proposal"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_community",children:"community-pool-spend"})," - Submit a community pool spend proposal"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_param",children:"param-change"})," - Submit a parameter change proposal"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/submit-legacy/babylond_tx_gov_submit-legacy-proposal_software",children:"software-upgrade"})," - Submit a software upgrade proposal"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_submit-proposal",children:"submit-proposal"})," - Submit a proposal along with some messages, metadata and deposit"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_vote",children:"vote"})," - Vote for an active proposal, options: yes/no/no_with_veto/abstain"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_gov/babylond_tx_gov_weighted-vote",children:"weighted-vote"})," - Vote for an active proposal, options: yes/no/no_with_veto/abstain"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_ibc",children:"ibc"})," - This is a Cosmos Native CLI, it queries subcommands for IBC transactions"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_channel",children:"channel"})," - IBC channel transaction subcommands"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/babylond_tx_ibc_client",children:"client"})," - IBC client transaction subcommands"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_create",children:"create"})," - create new IBC client"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_misbehaviour",children:"misbehaviour"})," - submit a client misbehaviour"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_update",children:"update"})," - update existing client with a header"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc/client/babylond_tx_ibc_client_upgrade",children:"upgrade"})," - upgrade an IBC client"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_ibc-transfer",children:"ibc-transfer"})," - This is a Cosmos Native CLI, it queries the subcommands for IBC fungible token transfer"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_ibc-transfer/babylond_tx_ibc-transfer_transfer",children:"transfer"})," - Transfer a fungible token through IBC"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_multi-sign",children:"multi-sign"})," - This is a Cosmos Native CLI, it generates multisig signatures for transactions generated offline"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_multi-sign/babylond_tx_multi-sign-batch",children:"multisign-batch"})," - This is a Cosmos Native CLI, it assembles multisig transactions in batch from batch signatures"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_sign",children:"sign"})," - This is a Cosmos Native CLI, it signs a transaction generated offline"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_sign/babylond_tx_sign-batch",children:"sign-batch"})," - This is a Cosmos Native CLI, it signs transaction batch files"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_slashing",children:"slashing"})," - This is a Cosmos Native CLI, it queries subcommand for slashing transaction"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_slashing/babylond_tx_slashing_unjail",children:"unjail"})," - Unjail validator previously jailed for downtime"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_staking",children:"staking"})," - This is a Cosmos Native CLI, it queries subcommand for Staking transaction"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_cancel-unbond",children:"cancel-unbond"})," - Cancel unbonding delegation and delegate back to the validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_create-validator",children:"create-validator"})," - Create new validator initialized with a self-delegation to it"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_delegate",children:"delegate"})," - Delegate liquid tokens to a validator"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_edit-validator",children:"edit-validator"})," - Edit an existing validator account"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_redelegate",children:"redelegate"})," - Redelegate illiquid tokens from one validator to another"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_staking/babylond_tx_staking_unbond",children:"unbond"})," - Unbond shares from a validator"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_validate-signatures",children:"validate-signatures"})," - This is a Cosmos Native CLI, it validates transactions signatures"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_vesting",children:"vesting"})," - This is a Cosmos Native CLI, it queries the subcommands for Vesting transaction"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-periodic-vesting-account",children:"create-periodic-vesting-account"})," - Create a new vesting account funded with an allocation of tokens"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-permanent-locked-account",children:"create-permanent-locked-account"})," - Create a new permanently locked account funded with an allocation of tokens"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/Babylond_tx_vesting/babylond_tx_vesting_create-vesting-account",children:"create-vesting-account"})," - Create a new vesting account funded with an allocation of tokens"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/Babylond_tx/babylond_tx_zoneconcierge",children:"zoneconcierge"})," - This is a Babylon-specific CLI, it queries the subcommands for zoneconcierge transactions"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_validate-genesis",children:"validate-genesis"})," - This is a Cosmos Native CLI, it validates the genesis file at the default location or at the location passed as an arg"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.a,{href:"/docs/cli/babylond/babylond_version",children:"version"})," - This is a Cosmos Native CLI, it prints the application binary version information"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function b(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(t,{...n})}):t(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>d,x:()=>r});var l=s(6540);const i={},a=l.createContext(i);function d(n){const e=l.useContext(a);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:d(n.components),l.createElement(a.Provider,{value:e},n.children)}}}]);