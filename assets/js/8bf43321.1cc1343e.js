"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[8490],{6093:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>t,default:()=>b,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var o=s(4848),r=s(8453);const a={id:"babylondkeysparse",sidebar_label:"babylond keys parse",hide_table_of_contents:!0},t="babylond keys parse",d={id:"cli/babylond/keys/babylondkeysparse",title:"babylond keys parse",description:"Parse key addresses and fingerprints from hexadecimal to bech32 and vice versa.",source:"@site/docs/cli/babylond/keys/babylondkeysparse.md",sourceDirName:"cli/babylond/keys",slug:"/cli/babylond/keys/babylondkeysparse",permalink:"/docs/cli/babylond/keys/babylondkeysparse",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/keys/babylondkeysparse.md",tags:[],version:"current",frontMatter:{id:"babylondkeysparse",sidebar_label:"babylond keys parse",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond keys mnemonic",permalink:"/docs/cli/babylond/keys/babylondkeysmnemonic"},next:{title:"babylond keys rename",permalink:"/docs/cli/babylond/keys/babylondkeysrename"}},i={},l=[{value:"keys parse command",id:"keys-parse-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"babylond-keys-parse",children:"babylond keys parse"}),"\n",(0,o.jsx)(n.p,{children:"Parse key addresses and fingerprints from hexadecimal to bech32 and vice versa."}),"\n",(0,o.jsx)(n.h2,{id:"keys-parse-command",children:"keys parse command"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"babylond keys parse <hex-or-bech32-address> [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"-h, --help   help for parse\n\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --home string              The application home directory (default "/home/<yourSystemUsername>/.babylond")\n      --keyring-backend string   Select keyring\'s backend (os|file|test) (default "os")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --log_format string        The logging format (json|plain) (default "plain")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --output string            Output format (text|json) (default "text")\n      --trace                    print out full stack trace on errors\n'})})]})}function b(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var o=s(6540);const r={},a=o.createContext(r);function t(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);