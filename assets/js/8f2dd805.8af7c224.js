"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[3158],{54:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var s=i(4848),r=i(8453);const t={id:"staking-expiry-checker",sidebar_label:"Staking Expiry Checker"},c="Staking Expiry Checker",a={id:"user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-expiry-checker",title:"Staking Expiry Checker",description:"1. Hardware Requirements",source:"@site/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-expiry-checker.md",sourceDirName:"user-guides/bitcoin-staking-phase1/backend-deployment/services",slug:"/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-expiry-checker",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-expiry-checker",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-expiry-checker.md",tags:[],version:"current",frontMatter:{id:"staking-expiry-checker",sidebar_label:"Staking Expiry Checker"},sidebar:"docs",previous:{title:"Staking API",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/services/staking-api"},next:{title:"Global System Configuration",permalink:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/global-params"}},o={},l=[{value:"1. Hardware Requirements",id:"1-hardware-requirements",level:2},{value:"2. Install Staking Expiry Checker",id:"2-install-staking-expiry-checker",level:2},{value:"2.1 Clone the repository to your local machine from Github",id:"21-clone-the-repository-to-your-local-machine-from-github",level:3},{value:"2.2 Check out the desired version",id:"22-check-out-the-desired-version",level:3},{value:"2.3 Install the binary by running",id:"23-install-the-binary-by-running",level:3},{value:"3. Configuration",id:"3-configuration",level:2},{value:"3.1 Create home directory",id:"31-create-home-directory",level:3},{value:"3.2 Copy the default configuration",id:"32-copy-the-default-configuration",level:3},{value:"3.3 Update default configurations",id:"33-update-default-configurations",level:3},{value:"4. Start Staking Expiry Checker",id:"4-start-staking-expiry-checker",level:2},{value:"5. Create systemd service (Optional - Linux Only)",id:"5-create-systemd-service-optional---linux-only",level:2},{value:"5.1 Create systemd service definition",id:"51-create-systemd-service-definition",level:3},{value:"5.2 Reload systemd manager configuration",id:"52-reload-systemd-manager-configuration",level:3},{value:"5.3 Enable the service to start on boot",id:"53-enable-the-service-to-start-on-boot",level:3},{value:"5.4 Start the service",id:"54-start-the-service",level:3},{value:"6. Monitoring",id:"6-monitoring",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"staking-expiry-checker",children:"Staking Expiry Checker"}),"\n",(0,s.jsx)(n.h2,{id:"1-hardware-requirements",children:"1. Hardware Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CPU: Multi-core processor (4 cores minimum)"}),"\n",(0,s.jsx)(n.li,{children:"Memory: Minimum 4GB RAM, recommended 8GB RAM"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"2-install-staking-expiry-checker",children:"2. Install Staking Expiry Checker"}),"\n",(0,s.jsx)(n.h3,{id:"21-clone-the-repository-to-your-local-machine-from-github",children:"2.1 Clone the repository to your local machine from Github"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/babylonlabs-io/staking-expiry-checker.git\n"})}),"\n",(0,s.jsx)(n.h3,{id:"22-check-out-the-desired-version",children:"2.2 Check out the desired version"}),"\n",(0,s.jsxs)(n.p,{children:["You can find the latest release\n",(0,s.jsx)(n.a,{href:"https://github.com/babylonlabs-io/staking-expiry-checker/releases",children:"here"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd staking-expiry-checker\ngit checkout tags/{VERSION}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"23-install-the-binary-by-running",children:"2.3 Install the binary by running"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make install\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-configuration",children:"3. Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"31-create-home-directory",children:"3.1 Create home directory"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/.staking-expiry-checker/\n"})}),"\n",(0,s.jsx)(n.h3,{id:"32-copy-the-default-configuration",children:"3.2 Copy the default configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cp ~/staking-expiry-checker/config/config-local.yml ~/.staking-expiry-checker/config.yml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"33-update-default-configurations",children:"3.3 Update default configurations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"MongoDB cluster to connect to"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Set the MongoDB connection address (",(0,s.jsx)(n.code,{children:"address"}),")\nand credentials (",(0,s.jsx)(n.code,{children:"username"}),", ",(0,s.jsx)(n.code,{children:"password"}),", and ",(0,s.jsx)(n.code,{children:"db-name"}),") to match\nthe information from the\n",(0,s.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/mongodb",children:"installed MongoDB cluster"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'db:\n  username: "<admin>"\n  password: "<password>"\n  address: "mongodb://localhost:27017/?directConnection=true"\n  db-name: "<db-name>"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Bitcoin node to connect to"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Set the Bitcoin node connection address (",(0,s.jsx)(n.code,{children:"url"}),")\nand credentials (",(0,s.jsx)(n.code,{children:"rpc-user"})," and ",(0,s.jsx)(n.code,{children:"rpc-pass"}),")\nto match the information from the\n",(0,s.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/bitcoind",children:"installed Bitcoin node"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"btc:\n  endpoint: localhost:18332\n  disable-tls: false\n  net-params: testnet\n  rpc-user: rpcuser\n  rpc-pass: rpcpass\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"RabbitMQ cluster to connect to"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Set the RabbitMQ connection address (",(0,s.jsx)(n.code,{children:"url"}),")\nand credentials (",(0,s.jsx)(n.code,{children:"queue_user"})," and ",(0,s.jsx)(n.code,{children:"queue_password"}),")\nto match the information from the\n",(0,s.jsx)(n.a,{href:"/docs/user-guides/bitcoin-staking-phase1/backend-deployment/infra/rabbitmq",children:"installed RabbitMQ cluster"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'queue:\n  queue_user: admin\n  queue_password: password\n  url: "localhost:5672"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Prometheus metrics configuration:"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Set the ",(0,s.jsx)(n.code,{children:"host"})," and ",(0,s.jsx)(n.code,{children:"port"})," to customize how the metrics are exposed"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"metrics:\n  host: 0.0.0.0\n  port: 2112\n"})}),"\n",(0,s.jsx)(n.h2,{id:"4-start-staking-expiry-checker",children:"4. Start Staking Expiry Checker"}),"\n",(0,s.jsx)(n.p,{children:"You can start the staking-expiry-checker by running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"staking-expiry-checker --config ~/.staking-expiry-checker/config.yml\n"})}),"\n",(0,s.jsx)(n.h2,{id:"5-create-systemd-service-optional---linux-only",children:"5. Create systemd service (Optional - Linux Only)"}),"\n",(0,s.jsx)(n.h3,{id:"51-create-systemd-service-definition",children:"5.1 Create systemd service definition"}),"\n",(0,s.jsxs)(n.p,{children:["Run the following command, replacing ",(0,s.jsx)(n.code,{children:"system_username"}),"\nwith the appropriate system user or service account name:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat <<EOF | sudo tee /etc/systemd/system/staking-expiry-checker.service\n[Unit]\nDescription=Staking Expiry Checker service\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=$(which staking-expiry-checker) --config /home/system_username/.staking-expiry-checker/config.yml\nRestart=on-failure\nUser=system_username\n\n[Install]\nWantedBy=multi-user.target\nEOF\n"})}),"\n",(0,s.jsx)(n.h3,{id:"52-reload-systemd-manager-configuration",children:"5.2 Reload systemd manager configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,s.jsx)(n.h3,{id:"53-enable-the-service-to-start-on-boot",children:"5.3 Enable the service to start on boot"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable staking-expiry-checker.service\n"})}),"\n",(0,s.jsx)(n.h3,{id:"54-start-the-service",children:"5.4 Start the service"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start staking-expiry-checker.service\n"})}),"\n",(0,s.jsx)(n.h2,{id:"6-monitoring",children:"6. Monitoring"}),"\n",(0,s.jsxs)(n.p,{children:["The service exposes Prometheus metrics through a Prometheus server.\nBy default, the server is reachable under ",(0,s.jsx)(n.code,{children:"127.0.0.1:2112"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);