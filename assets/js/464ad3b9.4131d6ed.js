"use strict";(self.webpackChunkdocument_sample=self.webpackChunkdocument_sample||[]).push([[5780],{3588:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>b,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var s=t(4848),o=t(8453);const l={id:"babylondkeyslist",sidebar_label:"babylond keys list",hide_table_of_contents:!0},i="babylond keys list",a={id:"cli/babylond/keys/babylondkeyslist",title:"babylond keys list",description:"List all the available keys on the local key base.",source:"@site/docs/cli/babylond/keys/babylondkeyslist.md",sourceDirName:"cli/babylond/keys",slug:"/cli/babylond/keys/babylondkeyslist",permalink:"/docs/cli/babylond/keys/babylondkeyslist",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cli/babylond/keys/babylondkeyslist.md",tags:[],version:"current",frontMatter:{id:"babylondkeyslist",sidebar_label:"babylond keys list",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"babylond keys import",permalink:"/docs/cli/babylond/keys/babylondkeysimport"},next:{title:"babylond keys migrate",permalink:"/docs/cli/babylond/keys/babylondkeysmigrate"}},r={},d=[{value:"keys list command",id:"keys-list-command",level:2},{value:"Options",id:"options",level:2},{value:"Options Inherited from Parent Commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"babylond-keys-list",children:"babylond keys list"}),"\n",(0,s.jsx)(n.p,{children:"List all the available keys on the local key base."}),"\n",(0,s.jsx)(n.h2,{id:"keys-list-command",children:"keys list command"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"babylon keys list [flags]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"-h, --help         help for list\n-n, --list-names   List names only\n\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options Inherited from Parent Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      --home string              The application home directory (default "/home/<yourSystemUsername>/.babylond")\n      --keyring-backend string   Select keyring\'s backend (os|file|test) (default "os")\n      --keyring-dir string       The client Keyring directory; if omitted, the default \'home\' directory will be used\n      --log_format string        The logging format (json|plain) (default "plain")\n      --log_level string         The logging level (trace|debug|info|warn|error|fatal|panic) (default "info")\n      --output string            Output format (text|json) (default "text")\n      --trace                    print out full stack trace on e\n'})})]})}function b(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const o={},l=s.createContext(o);function i(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);